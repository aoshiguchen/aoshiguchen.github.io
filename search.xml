<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[c语言奇淫技巧之lambda表达式]]></title>
    <url>%2F2018%2F01%2F11%2F%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%2Fc%2Fc%E8%AF%AD%E8%A8%80%E5%A5%87%E6%B7%AB%E6%8A%80%E5%B7%A7%E4%B9%8Blambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[何为奇淫技巧?百科解释：指过于奇巧，让人着迷，却又无益的技艺与制品。 c语言奇淫技巧是指，利用c语言的一些细小的语法特性，来实现一些令人着迷的、眼花缭乱的、看似语言本身不支持的功能。比如：实现c语言封装、继承、多态、lambda表达式、动态包含等。在开发中巧妙运用这些技巧，会让你的程序组织起来更加合理。过于玩弄这些技巧则会令你舍本逐末、忽略了项目中其他更重要的事情。 研究奇淫技巧，是一个充满趣味的过程，也是不断深入语言的过程。通过理解这些奇淫技巧，你会发现你曾经理解的一些基本的语言概念其实并不是真的理解。 c语言实现lambda表达式的原理我们通常用的c语言语法，是c语言标准规定的语法。然而不同的c编译器在实现标准语法的同时，可能会扩展一些其他的特定语法。这些语法一般都是用在底层的一些库、工具中，如果你经常阅读c语言库，一定能发现它们的踪影。c语言实现lambda表达式，是基于gcc的一个扩展。而检查你当前的c编译器是否支持这个扩展，其实很简单。 运行下面的程序，输出1则证明你的编译器支持，如果报错则不支持。12345678910#include &lt;stdio.h&gt;int main()&#123; int a = (&#123;1;&#125;); printf("%d\n",a); return 0;&#125; 实现lambda表达式为了便于大家理解，这里采用递进的方式，渐进式修改代码，方便大家明白。 块级作用域1234567891011#include &lt;stdio.h&gt;int main()&#123; (&#123; char* s = "hello"; printf("%s\n",s); &#125;); return 0;&#125; 上面的运行后输出hello，说明 ({});可以作为一个块级作用域，里面可以运行代码片段。 返回值令人惊异的是，这个块级作用域还能对外返回一个值。当然，返回的方式不是return，而是直接写返回值，并带上一个分号。1234567891011121314#include &lt;stdio.h&gt;int main()&#123; int a = (&#123; char* s = "hello"; printf("%s\n",s); 10; &#125;); printf("%d\n",a); return 0;&#125; 匿名函数既然这种方法可以返回一个值，那么我们返回一个函数呢？毕竟函数名就是函数的首地址，答案是肯定的。1234567891011121314#include &lt;stdio.h&gt;int main()&#123; (&#123; void hello()&#123; printf("hello\n"); &#125; hello; &#125;)(); return 0;&#125; 宏改写匿名函数12345678910111213141516#include &lt;stdio.h&gt;#define $(rt,fb) (&#123; \ rt this fb; \ this; \&#125;)int main()&#123; $(void,()&#123; printf("hello\n"); &#125;)(); return 0;&#125; 这样看是不是有点眼熟呢，不过还是有些美中不足。我们希望这个匿名函数不仅仅只是自执行，还能保存到一个变量中。 用函数指针类型接收匿名函数对象123456789101112131415161718#include &lt;stdio.h&gt;#define $(rt,fb) (&#123; \ rt this fb; \ this; \&#125;)int main()&#123; //因为匿名函数没有返回值，没有参数，所以函数指针可以定义为：void (*hello)() void (*hello)() = $(void,()&#123; printf("hello\n"); &#125;); hello(); return 0;&#125; 宏改写函数指针定义上面虽然解决了保存匿名函数的问题，但是确带来的另一个问题，函数指针的定义比较冗长、复杂。因此，可以通过宏定义的方式改写。123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;#define $(rt,fb) (&#123; \ rt this fb; \ this; \&#125;)#define Type(t) typeof((&#123;t _t;_t;&#125;))#define FType(rt,fp) typeof((&#123;rt (*_this)fp;_this;&#125;))#define Consumer(t) FType(void,(t))int main()&#123; Consumer() hello = $(void,()&#123; printf("hello\n"); &#125;); hello(); Consumer(int) a = $(void,(int n)&#123; printf("num is %d\n",n); &#125;); a(10); Consumer(char*) b = $(void,(char* name)&#123; printf("hello %s\n",name); &#125;); b("zhangsan"); return 0;&#125; lambda表达式库到这里，我们就可以写一个lambda表达式的头文件了，用到lambda表达式的地方只需要包含这个头文件就可以了。 lambda.h1234567891011121314151617181920212223242526272829#ifndef _LAMBDA_H_H_#define _LAMBDA_H_H_#define Type(t) typeof((&#123;t _t;_t;&#125;))#define FType(rt,fp) typeof((&#123;rt (*_this)fp;_this;&#125;))#define lambda(rt,fb) (&#123; \ rt this fb; \ this; \&#125;)#define $ lambda#define Executor FType(void,())#define Consumer(t) FType(void,(t))#define BiConsumer(t1,t2) FType(void,(t1,t2))#define TiConsumer(t1,t2,t3) FType(void,(t1,t2,t3))#define Supplier(rt) FType(rt,())#define Function(rt,t) FType(rt,(t))#define BiFunction(rt,t1,t2) FType(rt,(t1,t2))#define TiFunction(rt,t1,t2,t3) FType(rt,(t1,t2,t3))#define UnaryOperator(t) Function(t,t)#define BinaryOperator(t) BiFunction(t,t,t)#endif type.h12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091#ifndef _TYPE_H_H_#define _TYPE_H_H_#include "lambda.h"#define Bool short#define TRUE 1#define FALSE 0#define Int int#define String char*//-------------------------------------------------#define IntConsumer Consumer(int)//-------------------------------------------------#define IntBiConsumer BiConsumer(int,int)//-------------------------------------------------#define IntTiConsumer TiConsumer(int,int,int)//-------------------------------------------------#define IntSupplier Supplier(int)#define StringSupplier Supplier(String)//-------------------------------------------------#define IntFunction(rt) Function(rt,int)//-------------------------------------------------#define ToIntFunction(t) Function(int,t)//-------------------------------------------------#define IntBiFunction(rt) BiFunction(rt,int,int)//-------------------------------------------------#define ToIntBiFunction(t1,t2) BiFunction(int,t1,t2)//-------------------------------------------------#define IntTiFunction(rt) TiFunction(rt,int,int,int)//-------------------------------------------------#define ToIntTiFunction(t1,t2,t3) TiFunction(int,t1,t2,t3)//-------------------------------------------------#define IntUnaryOperator UnaryOperator(int)//-------------------------------------------------#define IntBinaryOperator BinaryOperator(int)//-------------------------------------------------#define Comparator(t) BiFunction(int,t,t)//-------------------------------------------------#define Not(t) Function(BOOL,t)//-------------------------------------------------#define And(t) BiFunction(BOOL,t,t)//-------------------------------------------------#define Or(t) BiFunction(BOOL,t,t)//-------------------------------------------------#define Equal(t) BiFunction(BOOL,t,t)//-------------------------------------------------#define Test(t) Function(BOOL,t)#define Template(T,body) typeof((&#123; \ typedef struct body _TYPE; \ _TYPE _tmp; \ _tmp; \&#125;))#define BiTemplate(T1,T2,body) typeof((&#123; \ typedef struct body _TYPE; \ _TYPE _tmp; \ _tmp; \&#125;))#define TiTemplate(T1,T2,T3,body) typeof((&#123; \ typedef struct body _TYPE; \ _TYPE _tmp; \ _tmp; \&#125;))#define Data(T) Template(T,&#123; \ T data; \&#125;)#endif 测试这里为了方便写了另一个头文件，如下： util.h12345678910111213141516171819202122232425262728293031323334353637383940414243444546#ifndef _UTIL_H_H_#define _UTIL_H_H_#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include "type.h"#define Block FType(void,())#define Code(c) do&#123; \ c \&#125;while(0)#define PrintString(s) printf("%s",s)#define PrintStringLn(s) printf("%s\n",s)#define PrintInt(d) printf("%d",d)#define PrintIntLn(d) printf("%d\n",d)#define PrintBool(b) Code( \ if(b == TRUE)&#123; \ printf("true"); \ &#125;else&#123; \ printf("false"); \ &#125; \)#define PrintBoolLn(b) Code( \ if(b == TRUE)&#123; \ printf("true\n"); \ &#125;else&#123; \ printf("false\n"); \ &#125; \)#define Malloc(t,n) (t)malloc(sizeof(t) * n) String Concat(String s1,String s2)&#123; Int len = strlen(s1) + strlen(s2) + 1; String res = Malloc(String,len); sprintf(res,"%s%s",s1,s2); return res;&#125;#endif 下面是对于lambda表达式库的一些测试程序 测试1123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;stdio.h&gt;#include "lambda.h"#include "util.h"#include "type.h"int main()&#123; Block hello1 = $(void,()&#123; printf("hello\n"); &#125;); hello1(); Consumer(char*) hello2 = $(void,(char *name)&#123; printf("hello %s\n",name); &#125;); hello2("zhangsan"); BiConsumer(char*,int) hello3 = $(void,(char *name,int age)&#123; printf("hello %s %d\n",name,age); &#125;); hello3("lisi",22); Function(int,int) fact = $(int,(int n)&#123; int res = 1; for(int i = 1;i &lt;= n;i++)&#123; res *= i; &#125; return res; &#125;); printf("%d\n",fact(5)); BiFunction(int,int,int) sum = $(int,(int a,int b)&#123; return a + b; &#125;); printf("%d\n",sum(4,7)); return 0;&#125; 输出结果如下：12345hellohello zhangsanhello lisi 2212011 测试212345678910111213141516171819202122232425#include &lt;stdio.h&gt;#include "lambda.h"#include "util.h"#include "type.h"int main()&#123; Code( StringSupplier helloSupplier = $(String,()&#123; return "hello "; &#125;); Consumer(String) out = $(void,(String s)&#123; PrintStringLn(s); &#125;); String name = "zhangsan"; out(Concat(helloSupplier(),name)); ); return 0;&#125; 输出结果如下：1hello zhangsan]]></content>
      <categories>
        <category>编程语言</category>
        <category>c</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
        <tag>c</tag>
        <tag>奇淫技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用c++实现遗传算法]]></title>
    <url>%2F2018%2F01%2F10%2F%E7%AE%97%E6%B3%95%2F%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%2F0.0.1%2Fc%2B%2B%2F%E7%94%A8c%2B%2B%E5%AE%9E%E7%8E%B0%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[简介最优解问题，可以想象成生物的进化：生物进化需要一个初始的种群，即对应程序中需要给出一组问题的初始解，初始解的产生应尽可能简单，原则上问题的求解过程不应该依赖于初始解的设定，而应该依赖于进化。生物进行基因突变、基因重组，是生物多样化的基础，因此程序中为了避免陷入局部最优解，也需要引入类似的操作，下面的程序引入了基因突变。大自然对种群进行自然选择，保证了优良个体有更多的机会遗传到下一代，从而实现进化。所以程序中需要大自然这一角色对控制种群的进化方向。 既然有基因，程序中不可避免就涉及到基因的编码与解码。按照更接近于大自然的方式，可以使用二进制编码，更容易实现基因突变和基因重组，但需要不断进行编码解码，运算效率稍低。这里，我采用的是浮点数编码，写的第一个版本，为了简单，这里只引入了基因突变。相当于无性繁殖，比有性繁殖进化慢，故可以加长进化代数，以求更加接近最优解。 源码以下是遗传算法的c++实现，大自然（Nature）、个体（Individual）、遗传算法引擎（MyGeneticAlgorithm）是本算法的核心。 GeneticAlgorithmEngine.h123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103/********************************************************//*遗传算法引擎 *//********************************************************/ #pragma once#ifndef _YW_MY_GENETIC_ALGORITHM_GENETIC_ALGORITHM_ENGINE_H_H_#define _YW_MY_GENETIC_ALGORITHM_GENETIC_ALGORITHM_ENGINE_H_H_#include "Individual.h"#include "Math.h"#include "Nature.h"#include "Log.h"#include &lt;stdio.h&gt;namespace YW&#123; namespace MyGeneticAlgorithm&#123; /********************************************************/ /*遗传算法引擎 */ /*负责与客户端进行交互，协调大自然、个体的正常运转 */ /********************************************************/ class GeneticAlgorithmEngine&#123; public: /** *函数名：GeneticAlgorithmEngine *功能概要：构造函数 *param@1popSize:种群大小 *param@2mutationRate:基因突变的概率 *param@3maxPerturbation:最大的变异步长 *param@4generationCount:种群繁衍的代数 *param@5leftInterval:左区间 *param@6rightInterval:右区间 *param@7assessmentFunction:个体适应度评估函数 *返回值：无 **/ GeneticAlgorithmEngine(int popSize,double mutationRate,int generationCount,double leftInterval,double rightInterval,ASSESSMENT_FUNCTION assessmentFunction)&#123; LOG("GeneticAlgorithmEngine Constructor Invoketion!\n"); this-&gt;nature = new Nature(popSize,mutationRate,(rightInterval-leftInterval)/4000,leftInterval,rightInterval,assessmentFunction); this-&gt;generationCount = generationCount; &#125; /** *函数名：OnStart *功能概要：让种群开始进化 *params无 *返回值：无 **/ void OnStart()&#123; LOG("GeneticAlgorithmEngine OnStart Method Invoketion!\n"); LOG("-------------------------------------------------\n"); LOG("第0代种群：\n"); LOG("适应度总和：%.10lf\n",nature-&gt;totalFitness); LOG("最优适应度：%.10lf\n",nature-&gt;bestFitness); LOG("平均适应度：%.10lf\n",nature-&gt;averageFitness); LOG("最差适应度：%.10lf\n",nature-&gt;worstFitness); for(int i=0;i&lt;generationCount;i++)&#123; nature-&gt;Reproduction(); LOG("-------------------------------------------------\n"); LOG("第%d代种群：\n",i+1); LOG("适应度总和：%.10lf\n",nature-&gt;totalFitness); LOG("最优适应度：%.10lf\n",nature-&gt;bestFitness); LOG("平均适应度：%.10lf\n",nature-&gt;averageFitness); LOG("最差适应度：%.10lf\n",nature-&gt;worstFitness); &#125; LOG("最优个体首次出现于于第%d代\n",nature-&gt;first); &#125; /** *函数名：GetBeseFitness *功能概要：获取环境中最优个体的适应度 *params无 *返回值：最优个体的适应度 **/ double GetBeseFitness()&#123; LOG("GeneticAlgorithmEngine GetBeseFitness Method Invoketion!\n"); return nature-&gt;bestIndividual.fitness; &#125; /** *函数名：GetBestChromosome *功能概要：获取环境中最优个体的基因型 *params无 *返回值：最优个体的基因型 **/ double GetBestChromosome()&#123; LOG("GeneticAlgorithmEngine GetBestChromosome Method Invoketion!\n"); return nature-&gt;bestIndividual.vecChromosome[0]; &#125; private: Nature *nature;//大自然、环境 int generationCount;//种群繁衍的代数 &#125;; &#125;;&#125;;#endif Individual.h1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283/********************************************************//*个体 *//********************************************************/ #pragma once#ifndef _YW_MY_GENETIC_ALGORITHM_INDIVIDUAL_H_H_#define _YW_MY_GENETIC_ALGORITHM_INDIVIDUAL_H_H_#include&lt;vector&gt;namespace YW&#123; namespace MyGeneticAlgorithm&#123; using namespace std; /**************************************************************************/ /*个体 */ /*将求解过程模拟成物种的进化、最终经过自然选择存活下来的个体便为"最优解" */ /**************************************************************************/ class Individual&#123; public: friend class Nature; friend class Reproduction; friend class GeneticAlgorithmEngine; public: /** *函数名：Individual *功能概要：复制构造函数 *param@1individual:复制的对象 *返回值：无 **/ Individual(const Individual &amp;individual)&#123; this-&gt;fitness = individual.fitness; this-&gt;vecChromosome = individual.vecChromosome; &#125; /** *函数名：Individual *功能概要：默认构造函数 *param@1无 *返回值：无 **/ Individual():fitness(0)&#123; &#125; /** *函数名：Individual *功能概要：构造函数 *param@1vec基因型 *param@1value适应度 *返回值：无 **/ Individual(vector&lt;double&gt; vec,double value = 0):vecChromosome(vec),fitness(value)&#123; &#125; /** *函数名：&lt; *功能概要：个体之间优劣性的比较，依据适应度 *param@1individual参与比较的个体 *返回值：bool比较结果 **/ bool operator &lt;(Individual &amp;individual)&#123; return this-&gt;fitness &lt; individual.fitness; &#125; private: vector&lt;double&gt; vecChromosome;//染色体序列,采用浮点数对基因进行编码 double fitness;//个体适应度 &#125;; &#125;;&#125;;#endif Nature.h123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211/********************************************************//*大自然、环境 *//********************************************************/#pragma once#ifndef _YW_MY_GENETIC_ALGORITHM_NATURE_H_H_#define _YW_MY_GENETIC_ALGORITHM_NATURE_H_H_#include&lt;vector&gt;#include &lt;algorithm&gt;#include "Math.h"#include "Individual.h"#include "Random.h"namespace YW&#123; namespace MyGeneticAlgorithm&#123; using namespace std; using namespace YW::MyLiBrary::Math; typedef double (*ASSESSMENT_FUNCTION)(double value); /**************************************************************************/ /*大自然 */ /*引导种群的进化方向 */ /**************************************************************************/ class Nature&#123; public: friend class GeneticAlgorithmEngine; public: /** *函数名：Nature *功能概要：构造函数 *param@1popSize:种群大小 *param@2mutationRate:基因突变的概率 *param@3maxPerturbation:最大的变异步长 *param@4leftInterval:左区间 *param@5rightInterval:右区间 *param@6assessmentFunction:个体适应度评估函数 *返回值：无 **/ Nature(int popSize,double mutationRate,double maxPerturbation,double leftInterval,double rightInterval,ASSESSMENT_FUNCTION assessmentFunction)&#123; this-&gt;popSize = popSize; this-&gt;mutationRate = mutationRate; this-&gt;maxPerturbation = maxPerturbation; this-&gt;leftInterval = leftInterval; this-&gt;rightInterval = rightInterval; this-&gt;assessmentFunction = assessmentFunction; this-&gt;totalFitness = 0.0; this-&gt;bestFitness = DOUBLE_MIN_VALUE; this-&gt;averageFitness = 0.0; this-&gt;worstFitness = DOUBLE_MAX_VALUE; this-&gt;generation = 0; for(int i=0;i&lt;popSize;i++)&#123; Individual individual; individual.vecChromosome.push_back(random.GetRandom(leftInterval,rightInterval)); individual.fitness = assessmentFunction(individual.vecChromosome[0]); population.push_back(individual); &#125; CalculateFitness(); &#125; /** *函数名：CalculateFitness *功能概要： 统计整个种群的进化数据 *params无 *返回值：无 **/ void CalculateFitness()&#123; sort(population.begin(),population.end()); this-&gt;totalFitness = 0.0; this-&gt;averageFitness = 0.0; this-&gt;worstFitness = DOUBLE_MAX_VALUE; for(int i=0;i&lt;popSize;i++)&#123; totalFitness += population[i].fitness; if(population[i].fitness&gt;bestFitness)&#123; bestFitness = population[i].fitness; bestIndividual = population[i]; first = generation; &#125; if(population[i].fitness&lt;worstFitness)&#123; worstFitness = population[i].fitness; &#125; &#125; averageFitness = totalFitness / popSize; &#125; /** *函数名：GetChromoRoulette *功能概要： 轮盘赌选择 *params无 *返回值：无 **/ Individual GetChromoRoulette(vector&lt;Individual&gt;&amp;pop)&#123; Individual individual; double temp = 0.0; double slice; if(worstFitness&gt;=0)&#123; slice = random.GetRandom(0,1)*totalFitness; for(int i=0;i&lt;popSize;i++)&#123; temp += pop[i].fitness; if(temp&gt;=slice)&#123; individual = pop[i]; break; &#125; &#125; &#125;else&#123; double pseudoTotalFitness = totalFitness + (-1)*popSize*worstFitness; slice = random.GetRandom(0,1)*pseudoTotalFitness; for(int i=0;i&lt;popSize;i++)&#123; temp += pop[i].fitness+(-1)*worstFitness; if(temp&gt;=slice)&#123; individual = pop[i]; break; &#125; &#125; &#125; //避免因浮点数的精度误差造成错误 if(individual.fitness == 0)&#123; individual = pop[popSize-1]; &#125; return individual; &#125; /** *函数名：Mutate *功能概要： 基因突变 *params无 *返回值：无 **/ void Mutate(Individual &amp;individual)&#123; if(random.GetRandom(0,1)&lt;= mutationRate)&#123; individual.vecChromosome[0] += (random.GetRandom(0,1)-0.5)*maxPerturbation; if(individual.vecChromosome[0]&gt;rightInterval)&#123; individual.vecChromosome[0] = rightInterval; &#125; if(individual.vecChromosome[0]&lt;leftInterval)&#123; individual.vecChromosome[0] = leftInterval; &#125; &#125; &#125; /** *函数名：Reproduction *功能概要： 繁殖、产生下一代种群 *params无 *返回值：无 **/ void Reproduction()&#123; vector&lt;Individual&gt; temp = population; population.clear(); while(population.size()&lt;popSize)&#123; Individual individual = GetChromoRoulette(temp); Mutate(individual); individual.fitness = assessmentFunction(individual.vecChromosome[0]); population.push_back(individual); &#125; bool flag = true; for(int i=0;i&lt;popSize;i++)&#123; if(population[i].fitness&gt;=bestIndividual.fitness)&#123; flag = false; break; &#125; &#125; if(flag)&#123; population[(int)random.GetRandom(0,popSize-1)] = bestIndividual; &#125; generation++; CalculateFitness(); &#125; private: vector&lt;Individual&gt;population;//种群 int popSize;//种群大小(人口数量) ASSESSMENT_FUNCTION assessmentFunction;//评估函数 double totalFitness;//种群的适应度总和 double bestFitness;//种群中最优个体的适应度 double averageFitness;//种群的平均适应度 double worstFitness;//种群的最低适应度 Individual bestIndividual;//适应度最高的个体 double mutationRate;//基因突变的概率 int generation;//当前种群的代数 double maxPerturbation;//最大变异步长 double leftInterval;//左区间 double rightInterval;//右区间 int first;//最优个体首次出现的代数 &#125;; &#125;;&#125;;#endif Log.h123456789101112#pragma once#ifndef _YW_MY_LOG_H_H_#define _YW_MY_LOG_H_H_#ifdef DEBUG#define LOG printf#else#define LOG#endif#endif Math.h12345678910111213141516171819202122/********************************************************//*数学函数、常量 *//********************************************************/#pragma once#ifndef _YW_MY_LIBRARY_MATH_H_H_#define _YW_MY_LIBRARY_MATH_H_H_namespace YW&#123; namespace MyLiBrary&#123; namespace Math&#123; #define PI 3.14159265358979 #define DOUBLE_MAX_VALUE 1.7976931348623158e+308 #define DOUBLE_MIN_VALUE (-DOUBLE_MAX_VALUE+1) &#125;; &#125;;&#125;; #endif Random.h1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253/********************************************************//*随机数 *//********************************************************/#pragma once#ifndef _YW_MY_LIBRARY_MATH_RANDOM_H_H_#define _YW_MY_LIBRARY_MATH_RANDOM_H_H_#include &lt;time.h&gt;#include &lt;stdlib.h&gt;namespace YW&#123; namespace MyLiBrary&#123; namespace Math&#123; class Random&#123; public: /** *函数名：Random *功能概要：构造函数 *params 无 *返回值：无 **/ Random(); /** *函数名：GetRandom *功能概要：产生一个随机数 *params@1 start左区间 *params@2 end右区间 *返回值： 产生的随机数 **/ double GetRandom(double start,double end); &#125;random; Random::Random()&#123; srand(unsigned(time(0))); &#125; double Random::GetRandom(double start,double end)&#123; return start+(end-start)*rand()/RAND_MAX; &#125; &#125;; &#125;;&#125;;#endif 测试11234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253/********************************************************//*遗传算法练习 傲世孤尘 2014-10-12 *//********************************************************/#include &lt;windows.h&gt;#include &lt;iostream&gt;#include "GeneticAlgorithmEngine.h"#include "Individual.h"#include "Math.h"#include &lt;math.h&gt;using namespace std;using namespace YW::MyGeneticAlgorithm;using namespace YW::MyLiBrary::Math;/***函数名：func*功能概要： 评估个体的适应度 *param@1value基因型*返回值：double适应度**/double func(double value)&#123; //return value*sin(10*PI*value)+2.0; //return 2*value+1; //return (-2)*value-1; return sin(value);&#125;/***函数名：main*功能概要： 程序入口*params无*返回值：int进程结束代码**/int main()&#123; /** *种群大小：500 *基因突变的概率:0.8 *繁衍代数：300 *左区间：0 *右区间：4 *个体适应度评估函数：func **/ GeneticAlgorithmEngine engine(500,0.8,300,0,4,func); engine.OnStart(); printf("%lf\n",engine.GetBeseFitness()); printf("%lf\n",engine.GetBestChromosome()); printf("%lf\n",func(engine.GetBestChromosome())); return 0;&#125; 测试21234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253/********************************************************//*遗传算法练习 傲世孤尘 2017-08-01 *//********************************************************///#define DEBUG#include &lt;windows.h&gt;#include &lt;iostream&gt;#include "GeneticAlgorithmEngine.h"#include "Individual.h"#include "Math.h"#include &lt;math.h&gt;using namespace std;using namespace YW::MyGeneticAlgorithm;using namespace YW::MyLiBrary::Math;/***函数名：func*功能概要： 评估个体的适应度*param@1value基因型 *返回值：double适应度**/double func(double value)&#123; return value*sin(15*PI*value)+2.0;&#125;/***函数名：main*功能概要： 程序入口*params无*返回值：int进程结束代码**/int main()&#123; /** *种群大小：500 *基因突变的概率:0.8 *繁衍代数：300 *左区间：0 *右区间：4 *个体适应度评估函数：func **/ GeneticAlgorithmEngine engine(1000,0.8,600,0,200,func); engine.OnStart(); printf("最优个体适应度:%lf\n",engine.GetBeseFitness()); printf("最优个体基因:%lf\n",engine.GetBestChromosome()); printf("最优解:%lf\n",func(engine.GetBestChromosome())); return 0;&#125;]]></content>
      <categories>
        <category>算法</category>
        <category>遗传算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>遗传算法</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用node实现遗传算法]]></title>
    <url>%2F2018%2F01%2F10%2F%E7%AE%97%E6%B3%95%2F%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%2F0.0.1%2Fnode%2F%E7%94%A8node%E5%AE%9E%E7%8E%B0%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[简介最优解问题，可以想象成生物的进化：生物进化需要一个初始的种群，即对应程序中需要给出一组问题的初始解，初始解的产生应尽可能简单，原则上问题的求解过程不应该依赖于初始解的设定，而应该依赖于进化。生物进行基因突变、基因重组，是生物多样化的基础，因此程序中为了避免陷入局部最优解，也需要引入类似的操作，下面的程序引入了基因突变。大自然对种群进行自然选择，保证了优良个体有更多的机会遗传到下一代，从而实现进化。所以程序中需要大自然这一角色对控制种群的进化方向。 既然有基因，程序中不可避免就涉及到基因的编码与解码。按照更接近于大自然的方式，可以使用二进制编码，更容易实现基因突变和基因重组，但需要不断进行编码解码，运算效率稍低。这里，我采用的是浮点数编码，写的第一个版本，为了简单，这里只引入了基因突变。相当于无性繁殖，比有性繁殖进化慢，故可以加长进化代数，以求更加接近最优解。 源码以下是遗传算法的node实现，大自然（Nature）、个体（Individual）、遗传算法引擎（MyGeneticAlgorithm）是本算法的核心。 asgc-ai是傲世孤尘开源的一款基于node的人工智能算法库，本遗传算法集成于其中，本算法调用了一些asgc-ai中的公共方法，下面只给出遗传算法的核心实现，因此要获取完整的代码请点击这里 engine.js123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384var log = require('../../common/log');var Nature = require('./nature');/********************************************************//*遗传算法引擎 *//*负责与客户端进行交互，协调大自然、个体的正常运转 *//********************************************************/ /***函数名：Engine*功能概要：构造函数*param@1popSize:种群大小*param@2mutationRate:基因突变的概率*param@3maxPerturbation:最大的变异步长*param@4generationCount:种群繁衍的代数*param@5leftInterval:左区间*param@6rightInterval:右区间*param@7assessmentFunction:个体适应度评估函数*返回值：无**/function Engine(popSize,mutationRate,generationCount,leftInterval,rightInterval,assessmentFunction)&#123; if(!(this instanceof Engine))&#123; throw new Error('调用方式有误!'); &#125; log.out('Engine Constructor Invoketion!'); //大自然 this.nature = new Nature(popSize,mutationRate,(rightInterval-leftInterval)/4000,leftInterval,rightInterval,assessmentFunction); //种群进化代数 this.generationCount = generationCount;&#125;/***函数名：OnStart*功能概要：让种群开始进化*params无*返回值：无**/Engine.prototype.OnStart = function()&#123; log.out("Engine OnStart Method Invoketion!\n"); log.out("-------------------------------------------------\n"); log.out("第0代种群：\n"); log.out("适应度总和：%f\n",this.nature.totalFitness); log.out("最优适应度：%f\n",this.nature.bestFitness); log.out("平均适应度：%f\n",this.nature.averageFitness); log.out("最差适应度：%f\n",this.nature.worstFitness); for(var i = 0;i &lt; this.generationCount;i++)&#123; this.nature.Reproduction(); log.out("-------------------------------------------------\n"); log.out("第%d代种群：\n",i+1); log.out("适应度总和：%f\n",this.nature.totalFitness); log.out("最优适应度：%f\n",this.nature.bestFitness); log.out("平均适应度：%f\n",this.nature.averageFitness); log.out("最差适应度：%f\n",this.nature.worstFitness); &#125; log.out("最优个体首次出现于于第%d代\n",this.nature.first);&#125;/***函数名：GetBeseFitness*功能概要：获取环境中最优个体的适应度*params无*返回值：最优个体的适应度**/Engine.prototype.GetBeseFitness = function()&#123; return this.nature.bestIndividual.fitness;&#125;/***函数名：GetBestChromosome*功能概要：获取环境中最优个体的基因型*params无*返回值：最优个体的基因型**/Engine.prototype.GetBestChromosome = function()&#123; return this.nature.bestIndividual.vecChromosome[0];&#125;module.exports = Engine; nature.js123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181var log = require('../../common/log');var math = require('../../common/math');var Individual = require('./individual');var random = math.random;var DOUBLE_MIN_VALUE = math.consts.DOUBLE_MIN_VALUE;var DOUBLE_MAX_VALUE = math.consts.DOUBLE_MAX_VALUE;/**************************************************************************//*大自然 *//*引导种群的进化方向 *//**************************************************************************//***函数名：Nature*功能概要：构造函数*param@1popSize:种群大小*param@2mutationRate:基因突变的概率*param@3maxPerturbation:最大的变异步长*param@4leftInterval:左区间*param@5rightInterval:右区间*param@6assessmentFunction:个体适应度评估函数*返回值：无**/ function Nature(popSize,mutationRate,maxPerturbation,leftInterval,rightInterval,assessmentFunction)&#123; if(!(this instanceof Nature))&#123; throw new Error('调用方式有误!'); &#125; //种群大小 this.popSize = popSize; //基因突变概率 this.mutationRate = mutationRate; //最大变异步长 this.maxPerturbation = maxPerturbation; //左区间 this.leftInterval = leftInterval; //右区间 this.rightInterval = rightInterval; //评估函数 this.assessmentFunction = assessmentFunction; //种群适应度综合 this.totalFitness = 0.0; //种群最优个体适应度 this.bestFitness = DOUBLE_MIN_VALUE; //种群平均适应度 this.averageFitness = 0.0; //种群最低适应度 this.worstFitness = DOUBLE_MAX_VALUE; //当前种群的代数 this.generation = 0; //种群 this.population = []; for(var i=0;i&lt;popSize;i++)&#123; var individual = new Individual(); individual.vecChromosome.push(random.randomIntLCRC(leftInterval,rightInterval)); individual.fitness = assessmentFunction(individual.vecChromosome[0]); this.population.push(individual); &#125; this.CalculateFitness();&#125;/***函数名：CalculateFitness*功能概要： 统计整个种群的进化数据*params无*返回值：无**/Nature.prototype.CalculateFitness = function()&#123; this.population.sort((a,b) =&gt; a.fitness - b.fitness); this.totalFitness = 0.0; this.averageFitness = 0.0; this.worstFitness = DOUBLE_MAX_VALUE; for(var i=0;i &lt; this.popSize;i++)&#123; this.totalFitness += this.population[i].fitness; if(this.population[i].fitness &gt; this.bestFitness)&#123; this.bestFitness = this.population[i].fitness; this.bestIndividual = this.population[i]; this.first = this.generation; &#125; if(this.population[i].fitness &lt; this.worstFitness)&#123; this.worstFitness = this.population[i].fitness; &#125; &#125; this.averageFitness = this.totalFitness / this.popSize;&#125;/***函数名：GetChromoRoulette*功能概要： 轮盘赌选择*params无*返回值：无**/Nature.prototype.GetChromoRoulette = function(pop)&#123; var individual = new Individual(); var temp = 0.0; var slice; if(this.worstFitness &gt;= 0)&#123; slice = random.random() * this.totalFitness; for(var i = 0;i &lt; this.popSize;i++)&#123; temp += pop[i].fitness; if(temp &gt;= slice)&#123; individual = pop[i]; break; &#125; &#125; &#125;else&#123; var pseudoTotalFitness = this.totalFitness + (-1)*this.popSize*this.worstFitness; slice = random.random()*pseudoTotalFitness; for(var i = 0;i &lt; this.popSize;i++)&#123; temp += pop[i].fitness + (-1)*this.worstFitness; if(temp &gt;= slice)&#123; individual = pop[i]; break; &#125; &#125; &#125; //避免因浮点数的精度误差造成错误 if(individual.fitness == 0)&#123; individual = pop[this.popSize-1]; &#125; return individual;&#125;/***函数名：Mutate*功能概要： 基因突变*params无*返回值：无**/Nature.prototype.Mutate = function(individual)&#123; if(random.random()&lt;= this.mutationRate)&#123; individual.vecChromosome[0] += (random.random()-0.5)*this.maxPerturbation; if(individual.vecChromosome[0]&gt; this.rightInterval)&#123; individual.vecChromosome[0] = this.rightInterval; &#125; if(individual.vecChromosome[0] &lt; this.leftInterval)&#123; individual.vecChromosome[0] = this.leftInterval; &#125; &#125;&#125;Nature.prototype.Reproduction = function()&#123; var temp = this.population.slice(0); this.population = []; while(this.population.length &lt; this.popSize)&#123; var individual = this.GetChromoRoulette(temp); this.Mutate(individual); individual.fitness = this.assessmentFunction(individual.vecChromosome[0]); this.population.push(individual); &#125; var flag = true; for(var i = 0;i &lt; this.popSize;i++)&#123; if(this.population[i].fitness &gt;= this.bestIndividual.fitness)&#123; flag = false; break; &#125; &#125; if(flag)&#123; this.population[random.randomIntLCRC(0,this.popSize-1)] = this.bestIndividual; &#125; this.generation++; this.CalculateFitness();&#125;module.exports = Nature; individual.js1234567891011121314151617181920212223242526272829303132333435363738/**************************************************************************//*个体 *//*将求解过程模拟成物种的进化、最终经过自然选择存活下来的个体便为"最优解" *//**************************************************************************//***函数名：Individual*功能概要：默认构造函数*param@1vecChromosome基因型*param@1fitness适应度*返回值：无**/function Individual(vecChromosome,fitness)&#123; if(!(this instanceof Individual))&#123; throw new Error('调用方式有误!'); &#125; //基因型 this.vecChromosome = vecChromosome || []; //个体适应度 this.fitness = fitness || 0;&#125;/***函数名：clone*功能概要：复制对象*返回值：复制后生成的对象**/Individual.prototype.clone = function()&#123; var individual = new Individual(); individual.fitness = this.fitness; individual.vecChromosome = this.vecChromosome.slice(0); return individual;&#125;module.exports = Individual; 测试123456789101112131415var genetic = require('asgc-ai').genetic;//是否打印进化过程中的日志genetic.setLog(true);var engine = new genetic.Engine(500,0.8,300,0,500,function(v)&#123; return 2 * v + 1; //return Math.sin(v);&#125;);engine.OnStart();console.log("种群最优个体适应度：%f",engine.GetBeseFitness());console.log("种群最优个体基因型：%f",engine.GetBestChromosome());]]></content>
      <categories>
        <category>算法</category>
        <category>遗传算法</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>算法</tag>
        <tag>遗传算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1、在CentOS上安装Docker]]></title>
    <url>%2F2018%2F01%2F04%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2FDocker%2F1%E3%80%81%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85Docker%2F</url>
    <content type="text"><![CDATA[环境 ● 操作系统 CentOS 7.2 64位 ● CPU 1核 ● 内存 1GB 安装1yum -y install docker-io 启动docker1service docker start 加入开机启动1chkconfig docker on 从docker.io中下载centos镜像到本地 /var/lib/docker/graph1docker pull centos:latest 查看已下载的镜像1docker images 启动一个容器1docker run -i -t centos /bin/bash 退出容器ctrl+d 退出容器且关闭, docker ps 查看无ctrl+p+q 退出容器但不关闭, docker ps 查看有 查看所有容器docker ps 进入容器1docker attach 44fc0f0582d9]]></content>
      <categories>
        <category>开发工具</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>linux</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2、卸载Docker]]></title>
    <url>%2F2018%2F01%2F04%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2FDocker%2F2%E3%80%81%E5%8D%B8%E8%BD%BDDocker%2F</url>
    <content type="text"><![CDATA[列出你安装过的包1yum list installed | grep docker 删除安装包123yum -y remove docker.x86_64yum -y remove docker-client.x86_64 yum -y remove docker-common.x86_64 删除镜像/容器等1rm -rf /var/lib/docker]]></content>
      <categories>
        <category>开发工具</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>linux</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为hexo的next主题应用短链功能]]></title>
    <url>%2F2017%2F12%2F27%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2Fhexo%2F%E4%B8%BAhexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E5%BA%94%E7%94%A8%E7%9F%AD%E9%93%BE%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[简述原理上本博客内容对所有网站都适用，不过本篇讲述是基于hexo的next主题上的应用。如果你恰好是用hexo搭建博客，且应用得是next主题，那么恭喜你，你可以直接复制下面的代码应用短链服务。否则，你得根据自己网站的需要进行相应的适应性修改。 前期准备本功能需要用到md5算法，所以首先需要做的是准备一个md5算法的js库。你可以到网上下载，由于md5算法代码不是很长，为了方便，直接贴在下面，你可以复制保存为md5.js备用。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274/* * JavaScript MD5 1.0.1 * https://github.com/blueimp/JavaScript-MD5 * * Copyright 2011, Sebastian Tschan * https://blueimp.net * * Licensed under the MIT license: * http://www.opensource.org/licenses/MIT * * Based on * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message * Digest Algorithm, as defined in RFC 1321. * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet * Distributed under the BSD License * See http://pajhome.org.uk/crypt/md5 for more info. *//*jslint bitwise: true *//*global unescape, define */(function ($) &#123; 'use strict'; /* * Add integers, wrapping at 2^32. This uses 16-bit operations internally * to work around bugs in some JS interpreters. */ function safe_add(x, y) &#123; var lsw = (x &amp; 0xFFFF) + (y &amp; 0xFFFF), msw = (x &gt;&gt; 16) + (y &gt;&gt; 16) + (lsw &gt;&gt; 16); return (msw &lt;&lt; 16) | (lsw &amp; 0xFFFF); &#125; /* * Bitwise rotate a 32-bit number to the left. */ function bit_rol(num, cnt) &#123; return (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (32 - cnt)); &#125; /* * These functions implement the four basic operations the algorithm uses. */ function md5_cmn(q, a, b, x, s, t) &#123; return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b); &#125; function md5_ff(a, b, c, d, x, s, t) &#123; return md5_cmn((b &amp; c) | ((~b) &amp; d), a, b, x, s, t); &#125; function md5_gg(a, b, c, d, x, s, t) &#123; return md5_cmn((b &amp; d) | (c &amp; (~d)), a, b, x, s, t); &#125; function md5_hh(a, b, c, d, x, s, t) &#123; return md5_cmn(b ^ c ^ d, a, b, x, s, t); &#125; function md5_ii(a, b, c, d, x, s, t) &#123; return md5_cmn(c ^ (b | (~d)), a, b, x, s, t); &#125; /* * Calculate the MD5 of an array of little-endian words, and a bit length. */ function binl_md5(x, len) &#123; /* append padding */ x[len &gt;&gt; 5] |= 0x80 &lt;&lt; (len % 32); x[(((len + 64) &gt;&gt;&gt; 9) &lt;&lt; 4) + 14] = len; var i, olda, oldb, oldc, oldd, a = 1732584193, b = -271733879, c = -1732584194, d = 271733878; for (i = 0; i &lt; x.length; i += 16) &#123; olda = a; oldb = b; oldc = c; oldd = d; a = md5_ff(a, b, c, d, x[i], 7, -680876936); d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586); c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819); b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330); a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897); d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426); c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341); b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983); a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416); d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417); c = md5_ff(c, d, a, b, x[i + 10], 17, -42063); b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162); a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682); d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101); c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290); b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329); a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510); d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632); c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713); b = md5_gg(b, c, d, a, x[i], 20, -373897302); a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691); d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083); c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335); b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848); a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438); d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690); c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961); b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501); a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467); d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784); c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473); b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734); a = md5_hh(a, b, c, d, x[i + 5], 4, -378558); d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463); c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562); b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556); a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060); d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353); c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632); b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640); a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174); d = md5_hh(d, a, b, c, x[i], 11, -358537222); c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979); b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189); a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487); d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835); c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520); b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651); a = md5_ii(a, b, c, d, x[i], 6, -198630844); d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415); c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905); b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055); a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571); d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606); c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523); b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799); a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359); d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744); c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380); b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649); a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070); d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379); c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259); b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551); a = safe_add(a, olda); b = safe_add(b, oldb); c = safe_add(c, oldc); d = safe_add(d, oldd); &#125; return [a, b, c, d]; &#125; /* * Convert an array of little-endian words to a string */ function binl2rstr(input) &#123; var i, output = ''; for (i = 0; i &lt; input.length * 32; i += 8) &#123; output += String.fromCharCode((input[i &gt;&gt; 5] &gt;&gt;&gt; (i % 32)) &amp; 0xFF); &#125; return output; &#125; /* * Convert a raw string to an array of little-endian words * Characters &gt;255 have their high-byte silently ignored. */ function rstr2binl(input) &#123; var i, output = []; output[(input.length &gt;&gt; 2) - 1] = undefined; for (i = 0; i &lt; output.length; i += 1) &#123; output[i] = 0; &#125; for (i = 0; i &lt; input.length * 8; i += 8) &#123; output[i &gt;&gt; 5] |= (input.charCodeAt(i / 8) &amp; 0xFF) &lt;&lt; (i % 32); &#125; return output; &#125; /* * Calculate the MD5 of a raw string */ function rstr_md5(s) &#123; return binl2rstr(binl_md5(rstr2binl(s), s.length * 8)); &#125; /* * Calculate the HMAC-MD5, of a key and some data (raw strings) */ function rstr_hmac_md5(key, data) &#123; var i, bkey = rstr2binl(key), ipad = [], opad = [], hash; ipad[15] = opad[15] = undefined; if (bkey.length &gt; 16) &#123; bkey = binl_md5(bkey, key.length * 8); &#125; for (i = 0; i &lt; 16; i += 1) &#123; ipad[i] = bkey[i] ^ 0x36363636; opad[i] = bkey[i] ^ 0x5C5C5C5C; &#125; hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8); return binl2rstr(binl_md5(opad.concat(hash), 512 + 128)); &#125; /* * Convert a raw string to a hex string */ function rstr2hex(input) &#123; var hex_tab = '0123456789abcdef', output = '', x, i; for (i = 0; i &lt; input.length; i += 1) &#123; x = input.charCodeAt(i); output += hex_tab.charAt((x &gt;&gt;&gt; 4) &amp; 0x0F) + hex_tab.charAt(x &amp; 0x0F); &#125; return output; &#125; /* * Encode a string as utf-8 */ function str2rstr_utf8(input) &#123; return unescape(encodeURIComponent(input)); &#125; /* * Take string arguments and return either raw or hex encoded strings */ function raw_md5(s) &#123; return rstr_md5(str2rstr_utf8(s)); &#125; function hex_md5(s) &#123; return rstr2hex(raw_md5(s)); &#125; function raw_hmac_md5(k, d) &#123; return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)); &#125; function hex_hmac_md5(k, d) &#123; return rstr2hex(raw_hmac_md5(k, d)); &#125; function md5(string, key, raw) &#123; if (!key) &#123; if (!raw) &#123; return hex_md5(string); &#125; return raw_md5(string); &#125; if (!raw) &#123; return hex_hmac_md5(key, string); &#125; return raw_hmac_md5(key, string); &#125; if (typeof define === 'function' &amp;&amp; define.amd) &#123; define(function () &#123; return md5; &#125;); &#125; else &#123; $.md5 = md5; &#125;&#125;(this)); 基本配置 将md5.js复制到next主题下的source/js/src目录下 打开layout_scripts\commons.swig，给js_commons数组开头插入一个字符串：’src/md5.js’，请记住一定要在第一个，因为稍后我们需要在source/js/src/utils.js中编写代码，md5.js必须在之前加载好。添加后文件内容如下： 1234567891011&#123;% set js_commons = [ &apos;src/md5.js&apos;, &apos;src/utils.js&apos;, &apos;src/motion.js&apos; ]%&#125;&#123;% for common in js_commons %&#125; &lt;script type=&quot;text/javascript&quot; src=&quot;&#123;&#123; url_for(theme.js) &#125;&#125;/&#123;&#123; common &#125;&#125;?v=&#123;&#123; theme.version &#125;&#125;&quot;&gt;&lt;/script&gt;&#123;% endfor %&#125; 生成短链映射数据在blog根目录(public同级目录)下，新建一个generate.js文件，文件内容如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133var fs = require('fs');var md5 = require('./themes/me/source/js/src/md5').md5;var ROOT_DIR = 'public';var EXCLUDE = ['/css','/image','/js','/lib','/atom.xml','/favicon.ico','/index.html','/search.xml'];Array.prototype.indexOf = function(val)&#123; for(var i=0,n=this.length; i&lt;n; i++)&#123; if (this[i] === val)&#123; return i; &#125; &#125; return -1;&#125;Array.prototype.startsWith = function(val)&#123; for(var item of this)&#123; if(val.startsWith(item))&#123; return true; &#125; &#125; return false;&#125;//递归遍历文件var getFileList = function(path,exclude)&#123; var ergodicFile = function(path,relativePath,fileList)&#123; if(!fs.existsSync(path))&#123; return; &#125; if(exclude.startsWith(relativePath))&#123; return; &#125; var files = fs.readdirSync(path); files.forEach(function(file)&#123; var states = fs.statSync(path + '/' + file); if(states.isDirectory())&#123; var obj = &#123;&#125;; obj.type = 'dir'; obj.size = states.size; obj.name = file; obj.path = path + '/' + file; obj.relativePath = relativePath + '/' + file; fileList.push(obj); ergodicFile(path + '/' + file,relativePath + '/' + file,fileList); &#125; // else&#123; // var obj = &#123;&#125;; // obj.type = 'file'; // obj.size = states.size; // obj.name = file; // obj.path = path + '/' + file; // obj.relativePath = relativePath + '/' + file; // fileList.push(obj); // &#125; &#125;); &#125;; var fileList = []; ergodicFile(path,'',fileList); return fileList; &#125;;//获取短链var getLinkShort = function(url)&#123; var key = 'alexis'; var urlhash = md5(key,url); var len = urlhash.length; var charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'; var shortUrlList = []; //将加密后的串分成4段，每段4字节，对每段进行计算，一共可以生成四组短连接 for (var i = 0; i &lt; 4; i++) &#123; var urlhashPiece = urlhash.substr(i * len / 4, len / 4); //将分段的位与0x3fffffff做位与，0x3fffffff表示二进制数的30个1，即30位以后的加密串都归零 var hex = parseInt(urlhashPiece,16) &amp; 0x3fffffff; //此处需要用到hexdec()将16进制字符串转为10进制数值型，否则运算会不正常 var shortUrl = ''; //生成6位短连接 for (var j = 0; j &lt; 6; j++) &#123; //将得到的值与0x0000003d,3d为61，即charset的坐标最大值 shortUrl += charset.charAt(hex &amp; 0x0000003d); //循环完以后将hex右移5位 hex = hex &gt;&gt; 5; &#125; shortUrlList.push(shortUrl); &#125; return shortUrlList[0];&#125;var duang = function(files)&#123; var shortUrl = &#123;&#125;; shortUrl.toLong = &#123;&#125;; shortUrl.toShort = &#123;&#125;; for(var file of files)&#123; var relativePath = file.relativePath.substr(1); var hash = '#' + getLinkShort(relativePath); shortUrl.toLong[hash] = relativePath + '/'; shortUrl.toShort[relativePath + '/'] = hash; shortUrl.toShort[relativePath + '/#more'] = hash; &#125; return shortUrl;&#125;var fileList = getFileList(ROOT_DIR,EXCLUDE);var shortUrl = duang(fileList);fs.writeFile('./public/shortUrl.json',JSON.stringify(shortUrl),&#123;flag:'w',encoding:'utf-8',mode:'0666'&#125;,function(err)&#123; if(err)&#123; console.log("文件写入失败") &#125;else&#123; console.log("文件写入成功"); &#125;&#125;); 添加短链功能打开主题下source/js/src/utils.js文件，在最后面添加如下代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546me = &#123;&#125;;NexT.me = me;if (window.history &amp;&amp; window.history.pushState)&#123; me.shortUrl = null; //此处配置基网址 me.base = 'http://blog.aoshiguchen.com/'; //方便本地测试 if(document.domain == 'localhost')&#123; me.base = 'http://localhost:4000/'; &#125; $.ajax(&#123; type: "get", url: "/shortUrl.json", cache:false, async:false, dataType: "json", success: function(data)&#123; me.shortUrl = data; &#125; &#125;); console.log('shortUrl',me.shortUrl); var shortMap = me.shortUrl.toLong; var longMap = me.shortUrl.toShort; if(document.location.href != me.base)&#123; var url = document.location.href.substr(me.base.length); //如果是短链访问，则跳转到长链 if(shortMap[url])&#123; window.location.href = me.base + shortMap[url]; &#125;else if(longMap[decodeURI(url)])&#123; //如果是长链，则生成对应的短链，并记录到短链、长链映射 //然后将地址栏回显为短链 var shortUrl = longMap[decodeURI(url)]; history.pushState(null,null,'../../../../../../../../../../../../../' + shortUrl); &#125; &#125;&#125; 使用方法在hexo g命令生成静态博客之后，在blog根目录下执行以下命令，执行后会在public目录下生成一个shortUrl.json文件，然后发布即可。 1node generater 总结如果你按照上面的配置完，恭喜你成功应用上了短链功能。但目前加上这个功能，却留下了一个bug,每次点击浏览器后退时，都需要点击两次才能回到上一页面。有好的解决方案欢迎在下面留言^_^。]]></content>
      <categories>
        <category>开发工具</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>短链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[短链生成算法]]></title>
    <url>%2F2017%2F12%2F26%2F%E7%AE%97%E6%B3%95%2F%E7%9F%AD%E9%93%BE%E7%94%9F%E6%88%90%2F0.0.1%2Fjs%2F%E7%9F%AD%E9%93%BE%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[何为短链短链：即一个较短的链接地址，这个链接地址通常指的是url。 为什么需要短链现而今，互联网无处不在。我们无时无刻都在上网，查看信息，分享信息。而分享信息很多时候都是通过分享链接来实现的，比如说说、日志、群聊等等。一个奇长无比链接分享出来，特别恶心人。以及微博等社交软件发表、分享通常有字数限制。此时，短链需求应运而生。 短链原理将一个url部分冗长的信息通过哈希算法进行压缩，并建立哈希值与原链之间的映射。每当通过短链访问时，后端服务就通过短链中的哈希值找到对应的原链，然后通过请求转发或者重定向的方式转至原链接内容。 短链算法基于以上原理可知，任何一种哈希算法都可以作为短链生成的算法基础，这里给大家看到的是市面上广泛采用的基于MD5的算法。 代码示例123456789101112131415161718192021222324252627282930313233var md5 = require('./md5').md5;function getLinkShort(base,url)&#123; var key = 'alexis'; var urlhash = md5(key,url); var len = urlhash.length; var charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'; var shortUrlList = []; //将加密后的串分成4段，每段4字节，对每段进行计算，一共可以生成四组短连接 for (var i = 0; i &lt; 4; i++) &#123; var urlhashPiece = urlhash.substr(i * len / 4, len / 4); //将分段的位与0x3fffffff做位与，0x3fffffff表示二进制数的30个1，即30位以后的加密串都归零 var hex = parseInt(urlhashPiece,16) &amp; 0x3fffffff; //此处需要用到hexdec()将16进制字符串转为10进制数值型，否则运算会不正常 var shortUrl = base; //生成6位短连接 for (var j = 0; j &lt; 6; j++) &#123; //将得到的值与0x0000003d,3d为61，即charset的坐标最大值 shortUrl += charset.charAt(hex &amp; 0x0000003d); //循环完以后将hex右移5位 hex = hex &gt;&gt; 5; &#125; shortUrlList.push(shortUrl); &#125; return shortUrlList;&#125;console.log(getLinkShort('http://t.cn/','http://www.baidu.com')); 运行结果1234[ &apos;http://t.cn/vDS0KK&apos;, &apos;http://t.cn/vvDCO4&apos;, &apos;http://t.cn/b984CK&apos;, &apos;http://t.cn/ebfzHS&apos; ] 可以看到上面的方法生成了四个短链，可根据需要，采取其中一个作为短链即可。]]></content>
      <categories>
        <category>算法</category>
        <category>短链生成</category>
      </categories>
      <tags>
        <tag>短链</tag>
        <tag>算法</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux下安装jdk8]]></title>
    <url>%2F2017%2F12%2F22%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2Fjdk%2Flinux%E4%B8%8B%E5%AE%89%E8%A3%85jdk8%2F</url>
    <content type="text"><![CDATA[下载jdk8安装包http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html 拷贝到指定目录下（比如：/usr/package）解压到安装目录下(比如:/usr/soft/java)tar -zxvf jdk-8u121-linux-x64.gz -C /usr/soft/java 建立一个连接，方便引用(可以跳过)ln -s /usr/soft/java/jdk1.8.0_121/ /usr/jdk 配置环境变量vim /etc/profile JAVA_HOME=/usr/jdk CLASSPATH=$JAVA_HOME/lib/ PATH=$PATH:$JAVA_HOME/bin export PATH JAVA_HOME CLASSPATH 让环境变量生效执行 source /etc/profile 或者 sudo shutdown -r now 验证安装是否成功java -version]]></content>
      <categories>
        <category>开发工具</category>
        <category>jdk</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>linux</tag>
        <tag>jdk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javaweb获取客户端真实ip]]></title>
    <url>%2F2017%2F12%2F22%2F%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%2Fjava%2Fjavaweb%E8%8E%B7%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9C%9F%E5%AE%9Eip%2F</url>
    <content type="text"><![CDATA[在安全性要求较高的web项目中，我们经常有这样的需求: 黑名单：禁止指定ip访问。 白名单：允许指定ip访问。 根据ip追踪恶意入侵系统者。 在java中我们通常可以这样获取客户端ip地址：1request.getRemoteAddr() 但是这个方法有个弊端，就是如果对方使用了反向代理，那么这个方法获取到的永远都是反向代理服务器的ip，而并非用户的真实ip。这样也能达到禁止访问的目的，但是对于已经发生的恶意入侵，我们却无法定位到真实的用户主机。 当你遇到类似的问题时，那么下面的代码就能够很好的帮助你。1234567891011121314151617public static String getClientIP(HttpServletRequest request) &#123; String ip = request.getHeader("X-Forwarded-For"); if (StringUtils.isNotEmpty(ip) &amp;&amp; !"unKnown".equalsIgnoreCase(ip)) &#123; // 多次反向代理后会有多个ip值，第一个ip才是真实ip int index = ip.indexOf(","); if (index != -1) &#123; return ip.substring(0, index); &#125; else &#123; return ip; &#125; &#125; ip = request.getHeader("X-Real-IP"); if (StringUtils.isNotEmpty(ip) &amp;&amp; !"unKnown".equalsIgnoreCase(ip)) &#123; return ip; &#125; return request.getRemoteAddr();&#125;]]></content>
      <categories>
        <category>编程语言</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1、在linux上搭建svn服务]]></title>
    <url>%2F2017%2F12%2F21%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2FSvn%2F1%E3%80%81%E5%9C%A8linux%E4%B8%8A%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[环境 操作系统 CentOS 7.2 64位 CPU 1核 内存 1GB 安装 yum install subversion 查看安装位置： rpm -ql subversion 查看svn的版本 /usr/bin/svnversion –version 创建svn版本库根目录 mkdir -p /usr/repo/svn 创建版本库 svnadmin create /usr/repo/svn/test1执行了这个命令之后会在/usr/repo/svn/test1目录下生成如下这些文件: 修改svn配置进入conf目录authz文件是权限控制文件passwd是帐号密码文件svnserve.conf SVN服务配置文件 设置帐号密码vi passwd在[users]块中添加用户和密码，格式：帐号=密码，如yangwen = 123456 设置权限vi authz在末尾添加如下代码：[/]yangwen=rww=r意思是版本库的根目录dan对其有读写权限，w只有读权限。 修改svnserve.conf文件vi svnserve.conf打开下面的几个注释：anon-access = read #匿名用户可读auth-access = write #授权用户可写password-db = passwd #使用哪个文件作为账号文件authz-db = authz #使用哪个文件作为权限文件realm = /var/svn/svnrepos # 认证空间名，版本库所在目录 启动svn版本库 svnserve -d -r /usr/repo/svn 查看是否启动成功 ps aux | grep svnserve执行命令，结果如下： 在Windows上测试 Checkout: svn://118.89.63.66/test1]]></content>
      <categories>
        <category>开发工具</category>
        <category>svn</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>linux</tag>
        <tag>svn</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java实现一个简单的深度神经网络]]></title>
    <url>%2F2017%2F12%2F21%2F%E7%AE%97%E6%B3%95%2F%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%2F0.0.1%2Fjava%2F%E7%94%A8java%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%B7%B1%E5%BA%A6%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%2F</url>
    <content type="text"><![CDATA[初识神经网络简介 硬编码的智能：人工智能早期，用以实现专家系统。特点，实现难度高，并且难以适应变化。 机器学习：程序本身不编码实现任何解决具体问题的方法，而是模仿生物的进化、认知，能够不断地从周围环境中获取数据进行学习。特点：实现难度相较于上一个简单，但是需要大量数据，训练的方法也很重要，能够适应变化解决各种新的问题。 算法原理 外界信号通过你的眼睛、鼻子、舌头等等一系列感知器官（输入）捕获后传入大脑皮层（这个我也不清除，先假装是的），大脑皮层是第一层神经元，经过第一层处理后，然后传入第二层、第三层，最终经过n层处理后得到结果，所以我们能够对纷繁复杂的世界产生正确的认知。 深度神经网络算法，就是基于人脑认知事务进行学习的这一特性的算法。初始数据经由多层神经元的计算后得到输出，刚开始时可能会有较大的误差，这时就需要我们的训练。 训练分为监督式训练、无监督训练。这里我们讲的是监督式训练。 监督式训练：给出一组样本数据，以及对应的正确期望结果。让神经网络不断学习，神经网络会在学习的过程中不断地矫正神经元连接的突触的权值、动量系数等等。理论上经过若干次的训练后，这个神经网络就会调整为一个最佳的情况，这时，对给定的输入，能够在比较大的概率下给出正确的结果。 算法实现1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071import java.util.Random;public class BpDeep&#123; public double[][] layer;//神经网络各层节点 public double[][] layerErr;//神经网络各节点误差 public double[][][] layer_weight;//各层节点权重 public double[][][] layer_weight_delta;//各层节点权重动量 public double mobp;//动量系数 public double rate;//学习系数 public BpDeep(int[] layernum, double rate, double mobp)&#123; this.mobp = mobp; this.rate = rate; layer = new double[layernum.length][]; layerErr = new double[layernum.length][]; layer_weight = new double[layernum.length][][]; layer_weight_delta = new double[layernum.length][][]; Random random = new Random(); for(int l=0;l&lt;layernum.length;l++)&#123; layer[l]=new double[layernum[l]]; layerErr[l]=new double[layernum[l]]; if(l+1&lt;layernum.length)&#123; layer_weight[l]=new double[layernum[l]+1][layernum[l+1]]; layer_weight_delta[l]=new double[layernum[l]+1][layernum[l+1]]; for(int j=0;j&lt;layernum[l]+1;j++) for(int i=0;i&lt;layernum[l+1];i++) layer_weight[l][j][i]=random.nextDouble();//随机初始化权重 &#125; &#125; &#125; //逐层向前计算输出 public double[] computeOut(double[] in)&#123; for(int l=1;l&lt;layer.length;l++)&#123; for(int j=0;j&lt;layer[l].length;j++)&#123; double z=layer_weight[l-1][layer[l-1].length][j]; for(int i=0;i&lt;layer[l-1].length;i++)&#123; layer[l-1][i]=l==1?in[i]:layer[l-1][i]; z+=layer_weight[l-1][i][j]*layer[l-1][i]; &#125; layer[l][j]=1/(1+Math.exp(-z)); &#125; &#125; return layer[layer.length-1]; &#125; //逐层反向计算误差并修改权重 public void updateWeight(double[] tar)&#123; int l=layer.length-1; for(int j=0;j&lt;layerErr[l].length;j++) layerErr[l][j]=layer[l][j]*(1-layer[l][j])*(tar[j]-layer[l][j]); while(l--&gt;0)&#123; for(int j=0;j&lt;layerErr[l].length;j++)&#123; double z = 0.0; for(int i=0;i&lt;layerErr[l+1].length;i++)&#123; z=z+l&gt;0?layerErr[l+1][i]*layer_weight[l][j][i]:0; layer_weight_delta[l][j][i]= mobp*layer_weight_delta[l][j][i]+rate*layerErr[l+1][i]*layer[l][j];//隐含层动量调整 layer_weight[l][j][i]+=layer_weight_delta[l][j][i];//隐含层权重调整 if(j==layerErr[l].length-1)&#123; layer_weight_delta[l][j+1][i]= mobp*layer_weight_delta[l][j+1][i]+rate*layerErr[l+1][i];//截距动量调整 layer_weight[l][j+1][i]+=layer_weight_delta[l][j+1][i];//截距权重调整 &#125; &#125; layerErr[l][j]=z*layer[l][j]*(1-layer[l][j]);//记录误差 &#125; &#125; &#125; public void train(double[] in, double[] tar)&#123; double[] out = computeOut(in); updateWeight(tar); &#125;&#125; 测试112345678910111213141516171819202122232425262728import java.util.Arrays;public class BpDeepTest&#123; public static void main(String[] args)&#123; //初始化神经网络的基本配置 BpDeep bp = new BpDeep(new int[]&#123;2,10,2&#125;, 0.15, 0.8); //BpDeep bp = new BpDeep(new int[]&#123;2,10,1&#125;, 0.15, 0.8); //设置样本数据 double[][] data = new double[][]&#123;&#123;1,2&#125;,&#123;2,2&#125;,&#123;1,1&#125;,&#123;2,1&#125;&#125;; //设置目标数据 double[][] target = new double[][]&#123;&#123;1,0&#125;,&#123;0,1&#125;,&#123;0,1&#125;,&#123;1,0&#125;&#125;; //double[][] target = new double[][]&#123;&#123;1&#125;,&#123;0&#125;,&#123;0&#125;,&#123;1&#125;&#125;; //迭代训练 for(int n=0;n&lt;5000;n++) for(int i=0;i&lt;data.length;i++) bp.train(data[i], target[i]); for(int j=0;j&lt;data.length;j++)&#123; double[] result = bp.computeOut(data[j]); System.out.println(Arrays.toString(data[j])+":"+Arrays.toString(result)); &#125; double[] x = new double[]&#123;3,1&#125;; double[] result = bp.computeOut(x); System.out.println(Arrays.toString(x)+":"+Arrays.toString(result)); &#125;&#125; 测试2123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354import java.util.*;import java.io.*;public class BpDeepTest2&#123; public static void main(String[] args) throws Exception&#123; BpDeep bp = new BpDeep(new int[]&#123;1,20,20,20,1&#125;, 0.4, 0.001); double[][] data = getData(); for(int n=0;n&lt;1000;n++) for(int i=0;i&lt;data.length;i++) bp.train(new double[]&#123;data[i][0]&#125;, new double[]&#123;data[i][1]&#125;); System.out.println("训练结果:"); double rate = 0; int successCount = 0; for(int j=0;j&lt;data.length;j++)&#123; double[] result = bp.computeOut(data[j]); System.out.println(data[j][0] + ":" + result[0]); if(((int)(result[0]*2)) == data[j][1])&#123; successCount++; &#125; &#125; rate = (successCount * 1.0) / data.length; System.out.printf("rate:%.2f\n",rate); System.out.println("验证:"); double[] x = new double[]&#123;201,202,203,204,205&#125;; for(int j=0;j&lt;x.length;j++)&#123; double[] result = bp.computeOut(new double[]&#123;x[j]&#125;); System.out.println(x[j] + ":" + result[0]); &#125; &#125; public static double[][] getData() throws Exception&#123; List&lt;Double[]&gt; list = new ArrayList&lt;Double[]&gt;(); Scanner scanner = new Scanner(new FileInputStream("data.txt")); while(scanner.hasNext())&#123; double a = scanner.nextDouble(); double b = scanner.nextDouble(); list.add(new Double[]&#123;a,b&#125;); &#125; double[][] result = new double[list.size()][3]; for(int i = 0;i &lt; list.size();i++)&#123; result[i][0] = list.get(i)[0]; result[i][1] = list.get(i)[1]; &#125; return result; &#125;&#125; data.txt中的数据如下：0 11 02 13 04 15 06 17 08 19 010 111 012 113 014 115 016 117 018 119 020 1 运行演示示例1问题：我们需要将笛卡尔坐标系中的点按照y=x分界线，分成两类。 样本数据：{1,2},{2,2},{1,1},{2,1}期望数据：{1,0},{0,1},{0,1},{1,0} 每组输入数据个数为2，所以第一层神经元的个数为2每组对应输出结果个数为2，所以最后一层神经元个数为2 {1,0}、{0,1} 分别对应两种结果。 代码简单解释BpDeep bp = new BpDeep(new int[]{2,10,2}, 0.15, 0.8);这是构造一个深度神经网络。第一个参数为一个一维数组，数组的长度为3，表示这个神经网络一共3层。第一个元素为2表示第一层2个神经元，最后一个元素为2，表示最后一层2个神经元。后面的0.15、0.8是动量系数还有啥的，现在说你们也不懂，先不说了，这两个数字可以随便改。0到1之间的一个数字，对算法的学习效率有些影响，不影响逻辑。 后面的样本数据和目标数据就不说了，我们直接看结果。 示例运行这四个是训练的结果：[1.0, 2.0]:[0.9792365424853283, 0.020600382812002088]上面对应的样本为：{1,2} {1,0}[2.0, 2.0]:[0.02256564436382444, 0.9773361523239155]上面对应的样本为：{2,2} {0,1}[1.0, 1.0]:[0.016761474334048444, 0.9837176729362672]上面对应的样本为：{1,1} {0,1}[2.0, 1.0]:[0.9793917240613336, 0.02048522092272838]上面对应的样本为：{2,1} {1,0} 这一个是训练结束后，测试的数据：[3.0, 1.0]:[0.9899489337264226, 0.009920676075267004]所以得到结果：{3,1}属于分类：{1,0} 示例2问题：将整数划分为正数和负数两类。暂不考虑0，样本数据如下：-5 0-4 0-3 0-2 0-1 01 12 13 14 15 1 负数输出0，整数输出1。训练完成后，验证数据如下：100:1-10:063:150:1-9:075:155:163:1 进阶方向 参数调优：本示例中并没有测试动量系数和学习稀疏的不同会给学习效率带来何种影响，但这个事实上决定着学习结果的效率。 激活函数：还有就是算法中使用的激活函数为：1/(1+Math.exp(-z))。这是目前业界用的非常广泛的一个激活函数，这个函数自己可以随便换，不同的激活函数对学习也有重大的影响。设计不好的激活函数，可能导致极难快速收敛。 输入输出的定义：任何数据都可以归结为一个一维数组信号，所有的分类结果都可以归结为一组0和1组成的一维数组。 在示例1中，将两个类别定义为{1,0} {0,1}在示例2中，将两个类别定义为0 1这个自己可以视情况而定，无有定解。 神经网络的神经元层数、个数：从上我们可以看到，决定第一层神经元数量的是输入数据，决定最后一层神经元数量的是输出数据。而中间的神经元层数、个数自己可以视情况而定，没有理论证明多少层更合适。这个需要自己不断尝试调优。一个基本的方向是，问题越复杂，需要的神经元数量、层数会越多。因此计算的效率也会越低 本算法是一个简化版的深度学习算法，非常简短。要解决稍复杂的问题，可能训练特别耗时，这只是一个单机实现，如果用上云计算，它的优势才能充分的体现出来。]]></content>
      <categories>
        <category>算法</category>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
        <tag>深度学习</tag>
        <tag>神经网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[msi文件安装错误]]></title>
    <url>%2F2017%2F12%2F21%2F%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%2Fmsi%E6%96%87%E4%BB%B6%E5%AE%89%E8%A3%85%E9%94%99%E8%AF%AF%2F</url>
    <content type="text"><![CDATA[1、错误代码为2502、2503的情况下，用如下方法解决 首先用管理员身份打开命令行，然后用如下命令进行安装：msiexec /package 路径]]></content>
      <categories>
        <category>系统软件</category>
      </categories>
      <tags>
        <tag>系统软件</tag>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[插件]]></title>
    <url>%2F2017%2F12%2F21%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2Feclipse%2F%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[drools： http://download.jboss.org/drools/release/5.5.0.Final/org.drools.updatesite/Groovy: http://dist.springsource.org/release/GRECLIPSE/e4.3/]]></content>
      <categories>
        <category>开发工具</category>
        <category>eclipse</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>插件</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1、在linux上搭建Git服务]]></title>
    <url>%2F2017%2F12%2F21%2F%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%2FGit%2F1%E3%80%81%E5%9C%A8linux%E4%B8%8A%E6%90%AD%E5%BB%BAGit%E6%9C%8D%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[环境 操作系统 CentOS 7.2 64位 CPU 1核 内存 1GB 安装Git yum install -y git 查看安装版本 git –version 创建Git用户，并为Git用户设置密码 useradd gitpasswd git （12345678） 创建Git仓库 mkdir -p /usr/repo/git/test1.gitgit init –bare /usr/repo/git/test1.gitcd /usr/repo/git/chown -R git:git test1.git 客户端clone远程仓库 git clone git@118.89.63.66:/usr/repo/git/test1.git 客户端创建SSH公钥和私钥客户端第一次clone会要求输入密码，此时可用SHH创建公钥、私钥。在window客户端，git bash中执行以下命令： ssh-keygen -t rsa -C “1052045476@qq.com” 服务器端Git打开RSA认证进入 /etc/ssh 目录，编辑 sshd_config，打开以下三个配置的注释：RSAAuthentication yesPubkeyAuthentication yesAuthorizedKeysFile .ssh/authorized_keys 保存并重启 sshd 服务： service sshd restart 打开RSA认证由 AuthorizedKeysFile 得知公钥的存放路径是 .ssh/authorized_keys，实际上是$Home/.ssh/authorized_keys，由于管理 Git 服务的用户是 git，所以实际存放公钥的路径是 /home/git/.ssh/authorized_keys在 /home/git/ 下创建目录 .ssh cd /home/gitmkdir .sshchown -R git:git .ssh 将客户端公钥导入服务端 /home/git/.ssh/authorized_keys文件 ssh git@118.89.63.66 ‘cat &gt;&gt; .ssh/authorized_keys’ &lt; ~/.ssh/id_rsa.pub 此处输入git密码，（12345678） 回到服务器端，查看 .ssh 下是否存在 authorized_keys 文件： 修改.ssh目录权限 chmod 700 .sshcd .sshchmod 600 authorized_keys 客户端clone仓库 git clone git@118.89.63.66:/usr/repo/git/test1.git 禁止git用户 ssh登录服务器编辑 /etc/passwd找到：git:x:502:504::/home/git:/bin/bash修改为git:x:502:504::/home/git:/bin/git-shell此时 git 用户可以正常通过 ssh 使用 git，但无法通过 ssh 登录系统。]]></content>
      <categories>
        <category>开发工具</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>linux</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[昊沧十周年篝火晚会有感]]></title>
    <url>%2F2015%2F10%2F23%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%98%8A%E6%B2%A7%E5%8D%81%E5%91%A8%E5%B9%B4%E7%AF%9D%E7%81%AB%E6%99%9A%E4%BC%9A%E6%9C%89%E6%84%9F%2F</url>
    <content type="text"><![CDATA[一入西山气象新，餐厅未到笑先闻。有望引来无望辈，盛情聚起重情人。歌声袅袅难停笔，篝火轰轰欲举樽。揽袖相邀谈十载，持杯共酒醉千巡。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[何以成说]]></title>
    <url>%2F2015%2F07%2F11%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E4%BD%95%E4%BB%A5%E6%88%90%E8%AF%B4%2F</url>
    <content type="text"><![CDATA[叶坠明时异，花残料守空。极寒觉地暖，至寡悟杯兴。有畏堪知死，无诗不解风。弱水三千任，南柯一宿平。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[贺上海昊沧系统控制技术有限责任公司成立十周年]]></title>
    <url>%2F2015%2F01%2F04%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E8%B4%BA%E4%B8%8A%E6%B5%B7%E6%98%8A%E6%B2%A7%E7%B3%BB%E7%BB%9F%E6%8E%A7%E5%88%B6%E6%8A%80%E6%9C%AF%E6%9C%89%E9%99%90%E8%B4%A3%E4%BB%BB%E5%85%AC%E5%8F%B8%E6%88%90%E7%AB%8B%E5%8D%81%E5%91%A8%E5%B9%B4%2F</url>
    <content type="text"><![CDATA[笔纵蓝天抒大业，情牵浩宇贺新春。净化污水臧大义，得来锦绣沁人心。智能防汛功如海，工艺仿真技超群。十年磨剑锋方露，跃马扬鞭日可寻。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1、asgc-web快速入门]]></title>
    <url>%2F2014%2F12%2F22%2F%E6%A1%86%E6%9E%B6%2Fasgc-web%2F1%E3%80%81asgc-web%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[安装nodeasgc-web是一款基于node的一站式web框架。因此，如果你的电脑上还没有安装node，请点击下面的链接按照步骤进行安装，安装的版本最好不低于8.0. 如何安装node? 安装asgc-web npm install asgc-web -g 查看版本安装完成之后，可以在命令行执行如下命令，如果安装成功，将显示asgc-web的版本号。 asgc -v 创建项目 asgc new [project] 执行上面的命令，将在当前目录创建一个项目模板。参数project为项目名称，可不填，默认为demo。 运行项目 asgc start [port] 进入项目根目录，执行以上命令，将启动一个asgc-web项目，port为端口号。port可不填，如果不填，则取项目根目录下的app.json里面配置的port为端口号。如果app.json不存在或者没有配置port，则默认取8088。]]></content>
      <categories>
        <category>框架</category>
        <category>asgc-web</category>
      </categories>
      <tags>
        <tag>框架</tag>
        <tag>node</tag>
        <tag>asgc-web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[赠小巢姐]]></title>
    <url>%2F2014%2F10%2F04%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E8%B5%A0%E5%B0%8F%E5%B7%A2%E5%A7%90%2F</url>
    <content type="text"><![CDATA[秀枝荏苒愈添香，浅笑红尘忆往常。妍手绘花神韵染，奇思措句玉玑藏。焉知明月撩窗影，可是青天唤远方。好似断琴心外意，且于人海共流光。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蝶恋花-其一]]></title>
    <url>%2F2014%2F07%2F16%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E8%9D%B6%E6%81%8B%E8%8A%B1-%E5%85%B6%E4%B8%80%2F</url>
    <content type="text"><![CDATA[雨过窗前山色暗，陋室无眠，忍顾星云散。一寸香烛谁共剪？枝头惊落平沙雁。信步危楼空缱绻，緑蚁频添，夜静人翻乱。笔下双形天地远，唯观诗酒如初见。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[只舟泛海]]></title>
    <url>%2F2014%2F06%2F05%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%8F%AA%E8%88%9F%E6%B3%9B%E6%B5%B7%2F</url>
    <content type="text"><![CDATA[（一） 一滴水 裹挟大地的粗犷的黄 投入江河湖海 在浪涛中起伏、在船桨里飞旋、在礁石上跳跃 一抹云 拥抱天空的细腻的蓝 掩映日月星辰 在阳光下舒展、在黑夜中漂泊、在狂风里聚散 流淌、汇合、飞升 漂泊、凝聚、降落 它们演绎着不同的人生 它们演绎着同样的精彩 （二） 夜行而归的男人，借一泓流泻的清凉 洗尽身上的污渍、也洗尽心中的烦忧 怅然失落的男人，借一杯冰冷的火热 灌醉疲惫的肉体、也灌醉疲惫的心灵 凝固、流动、飞升 火热、清凉、冰冷 水是男人的父母、也是老师 水是男人的朋友、也是恋人 （三） 逐水而居，寻在水一方的伊人 人不见，水空流 不歇不辍的人 在追赶岁月里遗落的曾经 那是一种守候 是一种由内而外的淡淡的企望 就像花与碟 云和月 （四） 曾经沧海，止于一瞬 山水不言，却已成绕 指间和风，轻拂一段尘寰过往 眉前墨画，消解万世迷离烟云 一曲天籁，喧嚣了我的世界 一纸山水，洞明了我的心扉 乐山水者，山水乐之 只舟泛海，愚者无忧 （五） 重重叠叠黛山 弯弯曲曲流水 以山为岸的水 汇聚成了深沉、博大的海洋 一柄舟楫划破水面 如在笙歌中远行 心中流淌的 是流动的、清凉的水]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[咏玻璃-七绝]]></title>
    <url>%2F2014%2F05%2F15%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E5%92%8F%E7%8E%BB%E7%92%83-%E4%B8%83%E7%BB%9D%2F</url>
    <content type="text"><![CDATA[聚拢星尘为玛瑙，敲开旷物便狂沙。身为土屑飞千里，敢做玻璃入万家。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人字歌]]></title>
    <url>%2F2014%2F04%2F26%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E4%BA%BA%E5%AD%97%E6%AD%8C%2F</url>
    <content type="text"><![CDATA[人为撇捺须臾尽，长大缘为志在肩。双脚踏平遗恨地，头悬一剑便为天。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无忧即乐-其五]]></title>
    <url>%2F2014%2F04%2F20%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%97%A0%E5%BF%A7%E5%8D%B3%E4%B9%90-%E5%85%B6%E4%BA%94%2F</url>
    <content type="text"><![CDATA[静倚危楼性自空，情疏笔墨意难穷。缺伊院落花携雨，失水池塘柳带风。闲著诗词优雅处，忙敲代码快然中。天涯过客形相似，世上行人趣不同。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[青天鉴]]></title>
    <url>%2F2014%2F04%2F20%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E9%9D%92%E5%A4%A9%E9%89%B4%2F</url>
    <content type="text"><![CDATA[中驿怀珏八百日，麻城坐井二十年。门前众雁蹁跹过，岭外孤云浮去闲。岂是寒梅甘寂寞，独学鸷鸟向长天。青灯不避风霜路，老死犹能气满轩。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[逆天谱]]></title>
    <url>%2F2013%2F08%2F15%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E9%80%86%E5%A4%A9%E8%B0%B1%2F</url>
    <content type="text"><![CDATA[月影消残酒未干，一厢心事向谁言？试问青山何处好？倾绿蚁，吊朱颜。 雨过窗前山色暗，空留沧海在胸前。闲来无复日边梦？待兵马，弄王权。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[清平乐-其一]]></title>
    <url>%2F2013%2F05%2F16%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%B8%85%E5%B9%B3%E4%B9%90-%E5%85%B6%E4%B8%80%2F</url>
    <content type="text"><![CDATA[停杯漫洒，触动千均发。只为那江山如画，城外大军驻马，龙滕椅上饮茶，金銮殿外观花。一战平息天下，明朝又到天涯。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[站出一种风度，笑出一种境界]]></title>
    <url>%2F2013%2F04%2F05%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E7%AB%99%E5%87%BA%E4%B8%80%E7%A7%8D%E9%A3%8E%E5%BA%A6%EF%BC%8C%E7%AC%91%E5%87%BA%E4%B8%80%E7%A7%8D%E5%A2%83%E7%95%8C%2F</url>
    <content type="text"><![CDATA[倚栏独眺，看着夜的黑一层层铺满我的窗台。脑际一闪而过的念想，如天际存留的最后一丝光线，瞬间膨胀、扩散，然后被稀释成一种恒久的空白。时间，被一点一点的蚕食殆尽。风催繁华落，独留人怅然。 摊开手掌，明了一个人的过去。掌纹深深浅浅、重重叠叠，来路坎坎坷坷、曲曲折折。五指间的间隙，是一口填不满的陷阱。雨在掌纹中流淌，风从五指间吹过。我们紧握小拳来到人世，我们摊开手掌离开亲友。手掌一开一合，便完成了其一生的使命。剩下的，只有关于你的光学投影和化学反应。 擦亮一块玻璃，努力向外望去，强烈的光芒是否会灼伤双眼？ 戴上耳机，电信号转化成的一种和谐的音波，回旋在我空旷的城市。今夜，我让音乐涤荡我的心。 蓦然间，忆起从前的林间放歌、席上挥毫。不经意间发现，那种状态已经渐行渐远。而现在，不正是以前汲汲以求的么。告别，正是最完美的走向；放下，正是最深情的拥抱。 将最豪迈的歌唱击打在键盘上，将最飘逸的诗句凝练成代码一行又一行。比诗句晦涩，让读懂它的人愈加稀少。比诗句通俗，在你精确地解读下无有二义。 敲一段代码，就是敲响一首梅花三弄，婉转动人。敲一段代码，就是敲响一首生命交响曲，激烈悲壮。让玲花点燃我疲沓的激情，让黄磊托起我站立的高度，让张宇刺激我麻木的神经，让腾格尔惊醒我昏睡的大脑。 做一个追求极致的人。 人之一生，何其短暂，何其渺小。站在宇宙的高度俯瞰，我们就是一粒微细的粉尘。风来雨来，瞬间湮灭。 一生一定要做点什么，难以想象一个人的一生会仅仅和大自然进物质交换和能量交换。在物质的盈缺中进化你的思想，在意识的合决中升华你的灵魂。 世界上有两种人，羡慕别人的人，让别人羡慕的人。 我们的的 轨迹，就是从羡慕别人的人指向让别人羡慕的人。 穷究一个问题的本质，你就掌握了一万个问题的答案。 学习，不是对知识点进行一次简单的遍历。机器能做到的让机器去做，你只需要归纳一条公式，总结一个道理。当你真的明白了，你就会豁然开朗。 双脚重踩在大地上，头颅轻放在云端。让狭窄的心脏映射四海的辽阔，让平静的面庞抖落日月的光芒。 站，要站出一种风度；笑，要笑出一种境界。]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[以我眼，看中国（思修课演讲稿）]]></title>
    <url>%2F2013%2F03%2F15%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E4%BB%A5%E6%88%91%E7%9C%BC%EF%BC%8C%E7%9C%8B%E4%B8%AD%E5%9B%BD%2F</url>
    <content type="text"><![CDATA[(1) 我们都有一个共同的名字，叫做中华儿女 我们都有一个响亮的称号，叫做炎黄子孙 五千年的历史文明是我们休憩的宝地 九百六十万平方公里的版图是我们成长的摇篮 我们的骨肉中隐藏着泰山傲岸的身影 我们的血液里翻滚着长江激荡的脾性 老子以五千言立道，我们便有了广阔的天空 孔子以二十篇弘儒，我们便有了坚实的大地 尘雾千里，历史在我眼前朦胧地呈现： 汉张骞出使西域，开通丝绸之路，那是何等的繁荣 唐鉴真东渡日本，促进中日邦交，那是何等的强盛 明郑和远下西洋，盛况空前，那是何等的豪迈 （2） 截取一段时光，打磨成一面明镜 明镜指示的方向，是一种残忍的真实 我看见鸦片悄无声息的爬上了中国人的烟斗 我看见数不清的条约压在中国人的心头 我看见万园之园 在中国人最疼痛的地方付之一炬 我看见原本完整的土地在中国人的眼中被践踏得千疮百孔、残缺不全 究竟什么缘故？ 在那段诡谲奇变的历史岁月中，到底发生了什么？ 明镜无语 当社稷危在旦夕，一个个鲜活的面容出现在我们的面前 林则徐来了、张之洞来了… 梁启超来了、谭嗣同来了… 孙中山来了、黄兴来了… 中国有救了 （3） 时光渐远，历史残存的讯息，是另一种 悲壮的鲜红 我们只得在一页页史书中找寻 他们的足迹 圣人虽故，大道犹存，星星之火传不尽 旧史既去，新史当书，纷繁故事看无穷 在如今没有硝烟的战场上，是一场又一场生与死的博弈 但我们丝毫不会退 因为我们都有一个共同的名字，叫做中华儿女 因为我们都有一个响亮的称号，叫做炎黄子孙]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无忧即乐-其四]]></title>
    <url>%2F2013%2F01%2F09%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%97%A0%E5%BF%A7%E5%8D%B3%E4%B9%90-%E5%85%B6%E5%9B%9B%2F</url>
    <content type="text"><![CDATA[频寻燕子未及春，又见谁家扣冢门？百日凭鐏花似酒，十年面壁影如人。霜结始晓天无泪，梦破方知月有痕。卧侧双形恩爱浅，池旁一木雪花深。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[元夜怀人]]></title>
    <url>%2F2013%2F01%2F01%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E5%85%83%E5%A4%9C%E6%80%80%E4%BA%BA%2F</url>
    <content type="text"><![CDATA[寒夜空思难成赋，高楼独倚易销魂。余为四海孤独客，酒是天涯寂寞人。把盏相倾灯作伴，持诗自赏影为凭。门外家家烟火齐，今宵无汝更伤神。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[军旅怀乡-七律]]></title>
    <url>%2F2012%2F11%2F23%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E5%86%9B%E6%97%85%E6%80%80%E4%B9%A1-%E4%B8%83%E5%BE%8B%2F</url>
    <content type="text"><![CDATA[帐外吹箫林渐静，云中舞剑日忽沉。闲游未见烛光浅，小憩方觉月影深。碧水汀边皆过客，青山顶处是离人。蓬门尽展千秋业，玉户谁怜百草恩？]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写给二十岁的自己（三）]]></title>
    <url>%2F2012%2F11%2F01%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%86%99%E7%BB%99%E4%BA%8C%E5%8D%81%E5%B2%81%E7%9A%84%E8%87%AA%E5%B7%B1%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[（一） 我只是想，在每天 吃饭的时候，像一个孩子一样狼吞虎咽 我只是渴望，在每天 睡觉的时候，能够心安理得的闭上双眼 但是，我 只是一个寄生虫 我仍然并将继续消耗 父母的血液 为了皮的虚荣 为了胃的渴望 突然感觉到一种耻辱 自飘渺中生成，侵淫我的心 电脑右下角的数字宣告着一天的完结 我努力细数一天的收获 苍白的结果 痛彻心扉 （二） 让自己更忙碌一点 就没有时间去堕落 在一段时间 工作成为我忙碌的焦点 四块钱一天的廉价劳动力无情的指出我的渺小 但我依然自得其乐 至少那一天的饭是我的双手挣来的 体味吃一碗饭的艰难 才能更坚定心中的理想 （三） 清晨是一个不错的场所 很安静，还有点微冷 极像一个被世人遗忘的角落 人在冷清的地方更容易冷静 床，不是一个好东西 除了舒适的睡眠 它什么也不能给予我们 只有的灯下辉煌 没有床上的卓越 很晚熄灯 用并不聪明的大脑继续思索 或者再敲几行代码 早早起床 即使只为听一首动人的心曲 看一眼窗外的宁静]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写给二十岁的自己（二）]]></title>
    <url>%2F2012%2F09%2F25%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%86%99%E7%BB%99%E4%BA%8C%E5%8D%81%E5%B2%81%E7%9A%84%E8%87%AA%E5%B7%B1%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[（一） 当一滴酒精滑过喉咙 我已经无法明确 我究竟睡着还是醒了 或者有梦 在我混沌的脑海中成型 但那只是一种尴尬的喜悦 梦醒时分 总是强烈的光芒刺痛双眼 或许该需要一丝黑暗 （二） 就让灯光照亮我的夜晚 就让心火导航我的明天 就让沉静变成一种热烈 就让冷静化归一种疯狂 我把视野定格在桃花的彼岸 我把心情搁浅在五月的荒原 我把失落归类于灵魂的懈怠 我把平庸划分为意志的衰竭 于是 就有了晦涩的表情 有了臃肿的大脑 以及卑微的言行 （三） 在臆想中 我用一张纸叠成 你温暖的摸样 来自瞳孔折射的忧伤 是一种 沉痛的悲凉 风那边的咆哮 是一种严厉的责问 水底下的汹涌 是一种无言的抗拒 细数指端年轮 轻舞一世流觞 与君奏尽天地繁华 许能成就一曲唯美的华章]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[今夜无眠]]></title>
    <url>%2F2012%2F09%2F21%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E4%BB%8A%E5%A4%9C%E6%97%A0%E7%9C%A0%2F</url>
    <content type="text"><![CDATA[林风送爽，秋桂吐香 我却没有心情在此片刻驻足凝望 黑夜坚持她一贯的冷漠 星星也一如既往地伤痛 在逼仄而又空旷的二十平米中 只有我和屏幕面对面 指端颤抖的倾诉 是心尖起伏的潮汐 键盘砰砰作响 覆盖的是一颗心跳的频率 你的图标闪烁 在我的视网膜上反复投影 只是再怎么回想 已没有往日的激情 落叶舞动一季的青春 飞扬在我的梦里 成为一种寄托 抑或是一种超然 屏幕右下角的时间不停更新 固执地记录着我的一夜未眠 那是一种友爱的提醒 还是一种疯狂的嘲笑 只是如石的心一不会再有任何感应]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[西江月-其二]]></title>
    <url>%2F2012%2F07%2F19%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E8%A5%BF%E6%B1%9F%E6%9C%88-%E5%85%B6%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[花落风停雨散，山高野静江寒。抚琴歌啸水云间，毕竟平生谁愿？头枕诗书万卷，须得大醉十年。金龟解尽笑弹冠，利欲轻轻一扇。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写给二十岁的自己（一）]]></title>
    <url>%2F2012%2F07%2F18%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%86%99%E7%BB%99%E4%BA%8C%E5%8D%81%E5%B2%81%E7%9A%84%E8%87%AA%E5%B7%B1%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[（一） 站在二十岁的看台，风景 是一场没有知觉得电影 眼中一滴雨水无聊地袭击水面，青春 一瞬间支离破碎 顺着一条路的方向，我 试图找到希望 前面的阳光明亮得晃眼 依然无法看清一条路的未来 一条路，一个人，一杯酒 构成一个人的一生 路，是一个人的天涯旅伴 酒，是一个人的风花雪月 （二） 在一块雾水玻璃上作画 必然面对云开雾散的悲哀 你的梦依然很美丽， 可你不要忘记身旁的冰天雪地 曾想以大地为宣纸 抒写一段唯美的神话 笔尖闪烁的那一星细小的光芒 终究敌不过漫漫长夜 金簪入发，玉珏系身 艳丽的颜色是谁也不敢想象的奢华 因为，时间一直默默地前行 谁等待，谁就淘汰 （三） 把心冷却到零摄氏度 才勉强挣脱尘世的喧嚣 沉溺在一杯酒的甘醇中 才能够慢慢追忆往日风华 我的眼中飞去了谁的思念 我的心底埋藏了谁的誓言 我的手里握紧了谁的关爱 我的身后黯淡了谁的色彩 看世上有多少真正的执着 看人间有多少纯粹的厮守 猥琐的誓言，消弭了斗志 空洞的承诺，虚无了守望 手里一粒沙，心中一盏茶 眼底芙蓉花，身后断肠崖 饮者无惧，品浊泥常为烈酒 赋者无敌，观壮士恰如宏文 2012-07-18 歆沣]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序人生]]></title>
    <url>%2F2012%2F07%2F15%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F%2F</url>
    <content type="text"><![CDATA[1 从你传送过来的一帧帧笑脸， 投影在我的视网膜上， 成为一张又一张唯美的图像， 亦或是一个又一个难解的符号。 我曾好奇想要破解你内心的密码， 却始终无法参透你高深的算法， 你依然心扉紧锁， 我无法得知来自你的任何讯息。 我在DES和RSA中反复求解， 我千百万次执着地探寻、尝试， 无数次迷途、失望， 我已经我法平静我的心。 不惜穷举一切可能性， 失去方向为你疯狂， 输入一段指令， 让电脑反复执行。 直到某一天， 我的计算机崩溃， 才发现， 原来你的密码根本不是为我而设的。 2 复制你温暖的记忆， 粘贴到我的心上， 另存为我无法忘记的存在， 我以为这样就能够拥有你有的那种快乐。 你的笑容，你的声波，你的劲度系数…. 全都被转换成二进制代码， 一点一点占据我的空间， 标记为只读、保存。 后来有一天， 我发现我已经装不下任何东西了， 于是面对别人的给予， 我输出：磁盘已满。 突然渴望能够有更大的内存， 渴望装下所有自己想要的， 可是，穿过匆匆人流，才发现， 没有人是我的可移动磁盘。 删除记忆， 却不小心格式化了， 即使重新下载， 也无法填满我１０００Ｇ的空虚。]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[四季如歌]]></title>
    <url>%2F2012%2F07%2F11%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%9B%9B%E5%AD%A3%E5%A6%82%E6%AD%8C%2F</url>
    <content type="text"><![CDATA[四季如歌没有起点的纤歌漫舞，就没有终点的浓烈似酒；没有行程的跌宕起伏，就没有生命的灿烂如花。当鸟开始歌唱，生命就开始了它最初的浪漫；当风开始行进，生命就暴露出它本质的狰狞。春光浮动水面，梦想摇曳枝头。我们看着春天渐远，看着桃花瓣瓣飘落。有些人仍在期许下一个春天的再现。然而，春天依然姗姗来迟，依然匆匆远去。为春所抛弃，站在生命的关口。突如其来的，是烈光如芒的夏。夏，总是以它无可辩驳的口吻讲述它的微言大义，总是以它睥睨天下的眼神刺透你的脊背骨髓。它总是告诉人们：在夏的烈日下暴晒，会更加坚定心中的理想；在夏的大雨中冲刷，会绽放出最夺目的光华。是这样吗？于智者，它是银行，默默地存放当下的快乐，并在未来的某一天升值，于庸者，它是玩具，疯狂地透支已有的一切，直到一无所有。随着风吹落一叶叶疲惫，万物袒露自己最后的辉煌。秋，就这样大度地走来。已经不需要任何言语，秋静静地看着长河落日、大漠孤烟。枝头金实累累，林间落叶翩翩。高举生命的火焰，安然谢下帷幕，那是生命最后的庄严。而在秋的后面呢，是冬。它刚毅而又冷峻，它睿智而又深沉。它让腐朽者速朽，它让不朽者永生。开谢荣枯，都等待它最后的评定。]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[采桑子-其一]]></title>
    <url>%2F2012%2F06%2F21%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E9%87%87%E6%A1%91%E5%AD%90-%E5%85%B6%E4%B8%80%2F</url>
    <content type="text"><![CDATA[金符玉玺遗边外，低首徘徊，画壁常开，酒醉红颜入梦来。风流已逝春何在，发弄银钗，月锁楼台，万里江山一手掰。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[西江月-其一]]></title>
    <url>%2F2012%2F06%2F20%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E8%A5%BF%E6%B1%9F%E6%9C%88-%E5%85%B6%E4%B8%80%2F</url>
    <content type="text"><![CDATA[楼顶残星万点，窗前冷月一弯。何人独上梦中船？碧叶皆成玉扇。 宇内长江有岸，胸中白堕无边。从今不复见君颜，留作千秋遗憾。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自示-其一]]></title>
    <url>%2F2012%2F06%2F19%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E8%87%AA%E7%A4%BA-%E5%85%B6%E4%B8%80%2F</url>
    <content type="text"><![CDATA[风吹烟散尽，水过草留痕。我是台中客，谁为座上人？江山何落寞，日月竟沉沦！笔墨寻春至，功名待此身。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[赠罗顺宇]]></title>
    <url>%2F2012%2F06%2F04%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E8%B5%A0%E7%BD%97%E9%A1%BA%E5%AE%87%2F</url>
    <content type="text"><![CDATA[清风拂梦碎，朗月照人归。见月诗千首，逢君酒一杯。愁来须共饮，酒到莫相推。自此分别后，天涯醉者谁？]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无忧即乐-其三]]></title>
    <url>%2F2012%2F05%2F27%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%97%A0%E5%BF%A7%E5%8D%B3%E4%B9%90-%E5%85%B6%E4%B8%89%2F</url>
    <content type="text"><![CDATA[卧雪燃薪尝冷暖，背笛舞带看直曲。车压稚子身为径，水漫京城路作渠。把盏离人笺上字，持竿钓客眼中鱼。由来岁乱伤国步，何意桌前象马车？]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[卜算子-其二]]></title>
    <url>%2F2012%2F04%2F27%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E5%8D%9C%E7%AE%97%E5%AD%90-%E5%85%B6%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[卜算子（其二。觅新欢）才见桃花开，又见桃花瘦。得意春风归去疾，万事难长久。早晚觅新欢，妾泪空盈袖。不见当年未嫁时，絮语黄昏后。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[问天-其一]]></title>
    <url>%2F2012%2F04%2F27%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E9%97%AE%E5%A4%A9-%E5%85%B6%E4%B8%80%2F</url>
    <content type="text"><![CDATA[尽饮千江酒，神飞百尺楼。弗如山吐秀，何必水藏忧。笛韵盈轩宇，星辉落晚舟。难及天子第，歆子应何求？]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[卜算子-其一]]></title>
    <url>%2F2012%2F04%2F27%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E5%8D%9C%E7%AE%97%E5%AD%90-%E5%85%B6%E4%B8%80%2F</url>
    <content type="text"><![CDATA[静野乱花飞，陋室凉风透。拟向江楼凑一阕，已是黄昏后。日久未成吟，徒使人消瘦。待到新词拼就时，泪水湿衣袖。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[像风一样]]></title>
    <url>%2F2011%2F12%2F22%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%83%8F%E9%A3%8E%E4%B8%80%E6%A0%B7%2F</url>
    <content type="text"><![CDATA[雾，很浓，轻易挡住我的视线。 远方，山的轮廓暧昧不明。 下面，是水泥、是围墙、是铁网、是萧索颓废的树桩。 听说，昨夜有两只鸟谈情说爱，彻夜不眠，双双冻死于冬青树下。 听说，曾经有一位诗人，以双手为樽，以雪水作酒，对月而歌，枕山而卧，以生命绝美的诗篇刻画出了梦的颜色。 听说，也是在冬天，一个受伤的兔子在一个乞丐的怀里，一直到春暖花开。 我抬头，想要看到星星的光亮，却只看到白茫茫的一片天。 那山、那鸟、那人、那天，模糊到难以想象，遥远到不可思议。 难以估测的距离，让一切真实的场景化为一种抽象的存在。 我，站在抽象中。 前方，是风。迎面扑来，撞击我的胸膛。 立毛肌收缩，身体微微颤抖，这分明是一种真实。 伸手触摸，只能感受到风的存在，无法明确风的去向。 谁能告诉我，风来自哪里？又将去向何方？ 让我的头发更凌乱些，去迎合风无端的狂野。 是否也该以半蹲的姿态，在跪着的人群中站立，在站着的人群中跪伏。 无极中，我看见： 各色人等川流于大街小巷之间，有人生、有人死、有人哭、有人笑。 有人奔波劳碌，聚千金于一身； 有人奸猾狡诈，赚官爵于一世； 有人勤勉苦读，创佳绩于当代； 有人殒身不恤，传美名于千秋。 我发现，文明，即是一种掩饰。 孤灯夜照，驱不散你心中的黑暗； 锣鼓齐喧，带不走你内心的恐惧； 千金在握，填不满你无边的空虚； 封侯授爵，平不了你眼中的欲望。 半生潦倒，亲友尽亡； 一纸名成，狐朋纷至。 身无分文，小冤难申； 手执百金，大事易成。 寒窗低首，无人问津； 金榜高悬，鸟都称赞。 功、名、利、禄，仿佛是有生命的，它们默默地操纵着一切。 人，甘为傀儡，并且自得其乐。 我追求真实，因而，我喜欢黎明。 夜晚的灯光已经熄灭，沉睡的人们还未醒来，我还未被同化的时候， 一切，都保持他们最原始的面孔。 我只需静静地站着，没有为什么， 像风一样。]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[平桥，是终点还是起点]]></title>
    <url>%2F2011%2F12%2F01%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%B9%B3%E6%A1%A5%EF%BC%8C%E6%98%AF%E7%BB%88%E7%82%B9%E8%BF%98%E6%98%AF%E8%B5%B7%E7%82%B9%2F</url>
    <content type="text"><![CDATA[1 朝同一个方向走路 牵手，成为必然 从远方，你们并肩走来 过往的影像模糊不清 当然，也只有时间 是唯一的见证 2 一定是有些年头了 并不粗壮的枝干 却已经略显沧桑 两棵树紧密地依靠着 跟相握 叶相拥 萧萧落木，落下一地金黄 一代代人从这里走过去了 又有一代代人到这里来 我愿成为一片叶 带春来到 也增添一抹新绿 3 晓来天静 披一身轻微的寒气 独立阳台 看远山如画 有鸟飞过 在我的视野之外 肆意地欢唱 青春广场上 你的笑，灿烂如花 4 把脚步放慢 以一首歌的节奏前进 走过坎坷的山路 去看平桥水库 你大声嚎叫 一瞬间，卸下所有的疲惫 漫步黄金大道 与你携手，絮语当年 静坐在岸边的时登上 让新融入这一汪碧绿 5 是的，该回去了 你似乎有些莫名的惆怅 你很小心的保存着点点滴滴 咔嚓一声 笑，落在照片上 你满意而归 6 在高原 在高原上一个叫民院的地方 有两个热血的青年 以他们不同的姿态 走向同一片天 扎根于民院 有着不同的面孔 却拥有相同的血液 是肝胆相照的朋友之谊 更是血浓于水的兄弟之情 7 终点 是行程的抵达 起点 是旅途的更新 平桥 是终点 更是起点]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无忧即乐-其一]]></title>
    <url>%2F2011%2F11%2F11%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%97%A0%E5%BF%A7%E5%8D%B3%E4%B9%90-%E5%85%B6%E4%B8%80%2F</url>
    <content type="text"><![CDATA[官袍处处生寒气，帅印时时可累人。寄意山中窥日月，寻幽水上度乾坤。乘风驾鹤割云破，踏浪凌波斩月分。若许从今随意梦，只手了却世间尘。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有梦就飞]]></title>
    <url>%2F2011%2F10%2F23%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E6%9C%89%E6%A2%A6%E5%B0%B1%E9%A3%9E%2F</url>
    <content type="text"><![CDATA[天真，蒙昧… 幼小的心，谁在抚慰？ 沉睡，无味… 迷茫的日子，真的很累。 流泪，心碎… 怎么深陷其中却不后悔？ 年华，似水… 就像日复一日的轮回。 什么样的距离， 值得你赶我追？ 什么样的困难， 让我们节节败退？ 有梦就飞， 就算被风雨折断翅膀。 年轻， 就得努力飞。]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生命的支点]]></title>
    <url>%2F2011%2F04%2F22%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E7%94%9F%E5%91%BD%E7%9A%84%E6%94%AF%E7%82%B9%2F</url>
    <content type="text"><![CDATA[雄鹰展翅高翔，令人惊叹，因其有鸟类中最为发达的胸肌；骏马飞驰原野，夺人视野，因其有走兽中无可比拟的双蹄；蝴蝶翩翩起舞，让人喜爱，因其有人世间最为美丽的翅膀。万类霜天，各显其能，世界便会绚丽多姿；芸芸众生，抓住长处，人生便会灿烂辉煌。黄金无足赤，白璧有微瑕。任何人都有自己的缺点与不足，但这并不影响我们的人生能达到何种高度。古往今来的许多事例告诉我们，避开自己的短处与不足，发扬自己的优点与喜好，将之作为生命的支点，生命就会开出一朵举世瞩目的奇葩。在二十世纪六十年代，中国的科学史上有一个举足轻重的人。他从小喜欢数学，但家境贫寒，只上完初中就退学去当店员。18岁时不幸患上伤寒病，造成严重的右腿残疾。一个从小怀揣着梦想的人，它看到了理想与现实间那道巨大的鸿沟；一个热血激荡的青年，在刚要为理想而奋斗时，就被命运如此的玩弄。每天消耗着粮食，却无法工作。人生之痛，莫大于此。之于他，路在何方？没有一丝眼泪，将所有的困苦付诸于笑。一个遥远的梦想在心里坚定，生根。他摸了摸口袋，将零星的人民币买了钢笔和稿纸。为了节约稿纸，他时常在地上进行演算，心算，因此锻炼出了超强的思维能力。无法想象，他在多少个与烛光陪伴的日子里匍匐在书桌上；无法确定，他多少次面对亲人的不理解和别人的嘲讽；亦无法了然，在那目光聚焦在纸上的两千多个日日夜夜，有多少次被饥饿所包围。唯有一点是可以确定的，他一直坚持到了最后，未有丝毫松懈。找准生命的支点，就会实现自身的胜利。是的，他做到了。扬长避短，造就成功的智慧在他两千多个日夜紧蹙的眉峰间显现。他就是华罗庚，智慧的选择让这个平凡的名字不再平凡。历史的册页也在这里添上了浓墨重彩的一笔：1924年初中毕业，刻苦自学；1930年赴清华大学任教；1936年赴剑桥大学访问；1938年任西南联合大学教授；1946年赴美，任普林斯数学研究所研究员，普林斯大学和伊利诺斯大学教授；1950年回国，历任清华大学教授，中国数学学会理事长，应用数学研究所所长；…妙哉！生命的支点。相信同样智慧的你，定然不会漠然视之。]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无忧即乐-其二]]></title>
    <url>%2F2011%2F02%2F15%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%97%A0%E5%BF%A7%E5%8D%B3%E4%B9%90-%E5%85%B6%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[暮雨荒郊垂碧柳，春风古道立斜阳。得失壁上观天静，荣辱池中会草香。梦冷常餐风雨露，愁深独眺海河江。樽前莫把功名论，醉饮千杯又何妨？]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[夜里望天天不语，独酌一杯逍遥去]]></title>
    <url>%2F2010%2F08%2F16%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%A4%9C%E9%87%8C%E6%9C%9B%E5%A4%A9%E5%A4%A9%E4%B8%8D%E8%AF%AD%EF%BC%8C%E7%8B%AC%E9%85%8C%E4%B8%80%E6%9D%AF%E9%80%8D%E9%81%A5%E5%8E%BB%2F</url>
    <content type="text"><![CDATA[透过十八岁男子的窗棂 可以看到一个喧嚣的夜晚 一个没有月亮的夜晚 却是那样的灯火通明 追名逐利 我看到整个世界都是忙碌的 歌舞狂欢 我看到整个世界都是懒散的 于是 我想起了曾经 曾经的夜晚 没有萤火虫是无法开怀的 曾经的天空 没有星星是无法入睡的 心波荡漾 穿梭在风中徜徉 在簇拥的花环旁边 进入梦的天堂 青涩的年龄向花一样容易受伤 蹒跚的脚步像船一样容易失去方向 古老的歌声凄惨忧伤不知去向 儿时的梦想豪迈悲凉已成奢望 ······ 谁会在喜遇知音之时凑一曲高山流水直达人间天上 谁会在心中郁结之时听那二泉映月撞击心房 谁会在微结愁怨之时撑一把油纸伞彳亍在雨巷 谁会在满心欢喜之时挥毫泼墨让心情随风飘扬 我静听 鞭炮声在身旁炸响 我远望 雄伟的泰山弯曲了它的脊梁 是谁？ 一个黑暗意念的投影 将大地笼罩 天上的星星那里去了呢 是否它也想寻求一个静谧的天堂 童稚的眼神哪里去了呢 难道它也畏惧了喧嚣的凡尘]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[雨]]></title>
    <url>%2F2010%2F07%2F10%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E9%9B%A8%2F</url>
    <content type="text"><![CDATA[在不经意间，大雨骤临，让我在忙乱之余再次感到阵阵难以隐去的忧伤。它悄无声息的来临，酷似凶手的来去无踪，又好似一介武夫，直来直去、大大咧咧，不屑于做任何渲染和铺排。 本来是大好晴天，阳光灿烂。大家都在一块空地上随意嬉戏、打闹，追逐着、哼着歌儿…突然，一场大雨不期而至。它带着天地间无与伦比的重压，伪装成清逸的雨滴，打在你肩上，润湿你的眼眶。在你的头上留下即使风干也无法隐去的足迹，让你在一瞬间多出了数以万计的缕缕愁丝。然后，裹挟着你的自信、希望和欢笑傲慢的飘然归去。于是，整个活泼、欢乐的场面便被凝固为一种呆板的、不协调的画面：他们不再嬉戏，不再打闹，不再奔跑、追逐、唱歌…满脸惊愕与凄惶。望望阴沉沉的天，再望望空无一物四周，竟是手足无措、不知所归。想想日本奇袭美国珍珠港时美国的感受，就不难明白他们此刻的心情。 雨，仍然一直下。让我原本火热、轻快的心，慢慢变得冰冷、沉重。它清澈透亮、润物无声，主宰天地万物的生命；它如珠似坠、生生不息，见证时光流逝的脚步匆匆。从此，雨，无雨；风，无风；晴，无晴。紧张的高三生活将由这场雨拉开序幕，来年可以预料的心境，将由这场雨收放。 慵懒终日的人，在这场雨中将作出大势已去、任水自流的决定；未尽全力的人，在这场雨中将生发无尽的忧虑、悔恨与感伤；拼搏奋进的人，在这场雨中将看到天晴后美丽的彩虹。 各人前路如何，口中难言，实心已明了。我的明天在何处？我要怎样扭转乾坤？ 是死亡前永不甘心的回光返照？无可奈何的垂死挣扎？还是豪气冲天的放手一搏？其实答案早已注定，从前有何种程度的荒废，现在就应有何种程度的弥补。 见兔而顾犬，未为晚也；亡羊而补牢，未为迟也。但愿如此。 下了几天的雨，已然停歇，却并未休止。在未来的日子里，在隐约可辨的前方，将有一场暴雨―高考―到临，任你如何逃窜也无法闪躲。 十八岁的天空，要经过这场雨的淘洗，才会高远；十余年艰苦学习的结果，等待这场雨的裁决；前途命运的明暗曲直，期待这场雨的肯定。 让暴风雨来得更猛烈些吧！]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[随想]]></title>
    <url>%2F2010%2F03%2F02%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E9%9A%8F%E6%83%B3%2F</url>
    <content type="text"><![CDATA[何为尘世？­ 尘者，浊也。夫万物有尘则浊，无尘则清。水之有尘，曰“浊水”；世之有尘，曰“浊世”，不亦类乎？因此一词，以“尘”代世日渐盛矣。略数一二，红尘、凡尘二词见之颇多。­ 举世皆浊，故我求清；举世皆平凡，故我求极至。所以我们能够理解战者的临死不屈、忠臣的冒死直谏、情人的生死相恋…­ 因而在饱食终日的平凡中我们想要高山仰止的卓越，在朝生暮死的短暂中我们乞求天荒地老的永恒…­ 在历史的滔滔洪流中被淹没成一滴水，在时间的滚滚浪涛中被稀释成一片空白…­ 这就是亘古的悲哀！­ 我们受了一点挫折就心烦，就像为搬一粒米而绞尽脑汁的蚂蚁；我们考试考好一点就得意忘形，就像为跳了五十厘米高而欢呼的跳蚤…­ 有人说，这就是生活的本质，这才是有血有肉的人…­ 是吗？是的。­ 真的是吗？不是。感慨太多，我却不想多说…­ 如果是鲜花，我愿做最芬芳的一朵；­ 如果是春叶，我愿做最明丽的一枝；­ …­ 该看破的看破­能走过的走过­已错过的没了着落­留下的知剩下传说­…­ 竹杖芒鞋轻胜马，­ 谁怕？]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[夜雪]]></title>
    <url>%2F2009%2F11%2F19%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E5%A4%9C%E9%9B%AA%2F</url>
    <content type="text"><![CDATA[月芒清逸盈满天，一壶美酒古桥边。半夜飞雪临池渡，犹作天花落人间。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人生-奋斗]]></title>
    <url>%2F2009%2F11%2F13%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E4%BA%BA%E7%94%9F-%E5%A5%8B%E6%96%97%2F</url>
    <content type="text"><![CDATA[花开终会谢美梦终将灭它隐逸在时间的缝隙里苟且从不向任何人承诺去留照常运行于生命的轨道不紧不慢、不骄不躁在世界的一个不知名的角落里偷偷寂灭又期待下一次的生死轮回不穷究已经逝去的过往不预设还是未知的来生任生命的英灵随处飘落看哪一方土地能容得下它的一寸之身地动山摇它置若罔闻电闪雷鸣它波澜不惊风云变幻激不起它心底的一丝涟漪沧海桑田荡不起它脸上的半点波浪它睿智地观察生命自安于每一个快乐的瞬间在欢笑声中淹没世上风云只作人间妙戏春花秋月才是当下所追于历史它是旁观者于奋斗它是陌路人于心情它是主宰者于现实它是无能人在欢欣的背后玩味失落的痛苦在痛苦的反面细数贫困的悲哀雨过天晴再用至情的睥睨傲笑人生狂沙漫天一拂衣袖的风采大雪纷飞一壶酒后的超然纷繁世间事一概不予理睬它总可以设法找到快乐的源泉 然而，我却不可以我不可以任生命的流光须臾散尽我不可以脱离宇宙一个人在精神世界独自遨我不可以执着于虚迷的世界而逃避冷酷的现实我不可以一无所有却还自得其乐我做不到生命拒绝堕落与颓废人生拒绝空白与茫然我不是圣人无法看淡一切名和利我不是野石无法一百年沉默不语我是一个人一个有血有肉有情感有梦想的人人必须奋斗或许在若干年后的一天夜里面对皎皎明月对月掬觞再捋一把花白的长须笑忆当年痴或许我所有的付出都只能成为日后谈笑的资本于梦想我也只能不离不弃我愿意我愿意一千年心无旁骛只做一件事那就是奋斗我愿意一万年矢志不渝只有一个梦那就是真理我愿意穷尽毕生的精力再赌上来世也要让生命绽放出它应有的光彩直至飞升化羽、万古恒寂 昨日的年光次地消逝美好的景物刹那间不复存在我还在时间的苦海中沉沦昙花一现留给我的只有无限遐想的悲哀个体生命慢慢归于淡漠与平凡我拒绝这种平凡有一种心情总是在失去后才明白是失落有一种感觉总是在失落后才明白是一无所有有一种觉悟总是在一无所有后才明白当日的无知我的心在虚迷的世界中流浪一场沉醉千年的梦境梦醒后一切化为乌有梦想躲在背后颤抖不敢示人我须用奋斗一个千年永不变更的姿态去赢得一个完美的转身一转身便是天高地阔、云移浪涌是的我急切的期待着 作于高二上–2009年11月13日]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[红叶飘飞]]></title>
    <url>%2F2009%2F10%2F28%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E7%BA%A2%E5%8F%B6%E9%A3%98%E9%A3%9E%2F</url>
    <content type="text"><![CDATA[总是在夜里最寂寞的士时候 轻易想起 想起一个人唯美的笑 和着一阵清风伴我入眠 梦中的天国是那样美丽 悠悠如雪的缠绵 还有我们肆意的笑 总是在清晨睡意朦胧的时候 轻易想起 想起一瓣红叶的美丽夹杂着三个月潺潺如流水的情愫 在心头涌动 想起了曾经的相视而笑 温柔洒脱如花 就在你转身的前一秒 按捺住一牵手的冲动 化作绵绵无尽的秋意 又到了叶落的季节 不知道后院的那一棵棵、一片片是否经得住秋风的洗礼 或也是一地的落红 天际征鸿 一段佳音响落耳畔： 不曾争取的不曾得到 不曾呵护的已然失去 已在身旁的好好珍惜 抓不住的随水流去]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安国论]]></title>
    <url>%2F2009%2F08%2F26%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%AE%89%E5%9B%BD%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[水流千载，所求者博； 人存一世，所为者何？ 挥师百万，将帅争功； 昼夜伏案，士子留名； 囤积居奇，商贾得利； 阴谋诡计，人臣逐权。 人化物也者，灭天理而穷人欲者也。—司马迁。 天理灭，而人欲可存乎？ 天地五气不通，人间是非不辨； 歌坊六音不绝，灾祸连年不断。 呜呼哀哉，大道尚在否？ 世间正邪不两立，官民唯法是从，是为法治社会； 处事暧昧不分明，上下唯利是图，是为物质社会。 法制社会者，以法服天下，故天下大公，是为治世； 物质社会者，以财论贵贱，故民怨沸腾，是为乱世。 治世多功臣，乱世多奸臣，千古一也； 法制多福祉，物质多离乱，千古一也。 亦然否？亦不然否？ 而今天下，物质耶？法制耶？ 歆子曰：“各尽一半矣。” 且观天下，且蘸饱墨： 法制在外以安其邦； 物质在内以扰其民。 如是而已。 是此， 大国将倾而未倾， 社稷将乱而未乱。 国至此境，不可不思也。 天下大公有二： 其一无为。 无为即无不为， 何也？ 问：无人行善？ 答：无人作恶，何需行善？ 老庄之道，要在以无为为有为， 天下无为则大公。 无善无恶，无忠无奸。 不刑不赏，不进不退。 故天下虽大公，社会难发展， 世界的本质是物质， 所有的事务无一例外必然向前发展， 无为之道，违背了社会发展的客观规律， 故不可行。 其二法度。 依法治国，无人例外。 虽为法治，实为人人可治。 一人之治，天下必乱； 人人之治，天下必安。 不避亲疏，不分贵贱， 不例功臣，不畏权势。 国家法治则大公。 欲长治久安，必尊法制。 后记————》 歆子，慕百家之道，好华贵之章，以为平生乐事。 虽身无八斗之才，手无生花之笔，但以七尺之身，迎击未来霜华。 回望历史，对先秦诸子之论颇有感想，遂作此篇，聊以抒怀。]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些许的光辉]]></title>
    <url>%2F2009%2F07%2F29%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E9%82%A3%E4%BA%9B%E8%AE%B8%E7%9A%84%E5%85%89%E8%BE%89%2F</url>
    <content type="text"><![CDATA[这个夏天，最多情的，是雨； 这个夜晚，最多情的，是树。 雨，无论是缠绵温柔的还是豁达放肆的， 都有一种契合心灵的美， 因此，我喜欢雨； 树，无论是笔直挺干的还是妖娆多姿的， 都有一种合乎理趣的美， 因此，我喜欢树。 两排路灯伸向了无尽头的远方， 我在灯光下站立，把影子踩在脚下。 暴烈的夏，嘈杂的街， 早已让清平小调的诗情不复存在。 灰白的水泥道上， 来往的车辆川流而过， 昏黄的灯光慢慢清晰又渐行渐远。 地面上蒸发着一丝下午残留的雨水， 还透着些难耐的暑热， 清风拂过，我听见亘古的洞箫声依稀存在。 我走着，在嘈杂的街道上漫无目的的走着， 想寻找一点能够让心灵倍感惬意的地方。 ……………….. 我坐在青草铺成的地毯上， 背倚着一株不知名的高大的树， 树枝摇曳，树影参差， 我在树影中观察道路，就像在黑暗中观察光明。 灯光透过叶隙，像是在闪烁， 投下斑驳的树影和星星点点的光芒， 那些许的光辉， 在树影的映衬下格外动人。]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[流星]]></title>
    <url>%2F2009%2F04%2F12%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E6%B5%81%E6%98%9F%2F</url>
    <content type="text"><![CDATA[在无边的星海中沉默 在既定的轨道上徘徊 执着的心却不甘就此沉沦 不相信宿命的轮回 冷眼扫过一眼看不到头的生命 却一眼看得到头的人生 用愤怒化为全部的动力 朝着美丽的明天 纵身一跃 当身体一阵火热 下面传来一阵欢呼]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[四月的风（二）]]></title>
    <url>%2F2009%2F04%2F10%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%9B%9B%E6%9C%88%E7%9A%84%E9%A3%8E(%E4%BA%8C)%2F</url>
    <content type="text"><![CDATA[天啊，四月的风借给我吧！ 就一个月，哪怕一天也行 这是我第一次在你面前 诉说我殷切的渴望 也是我第一次在你广阔的胸前 提出这小小的愿望 我热爱你，热爱你的广阔、你的博大、你的深沉 还有那黄昏时分的寂静 和那始终高敞的胸怀 我热爱你 也许，就这样永远的爱上了你 我要向你借风驰骋于天地 我要向你借风咆哮于原野 我要早黎明的时候带走山河的寂寞 我要在黄昏时分唱响生命的歌谣 我要傲然挺立于四海之内 我要还大地以锦绣河山 你是女娲造人吹出的口气 你是盘古开天哼出的鼻息 你是我心中我比尊贵的神啊 但是，我终于不能借风 也许，也永远只能是也许 那么，天地间 还有谁能傲视苍生 唯有你 风]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[四月的风(一)]]></title>
    <url>%2F2009%2F04%2F05%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%9B%9B%E6%9C%88%E7%9A%84%E9%A3%8E(%E4%B8%80)%2F</url>
    <content type="text"><![CDATA[我从四月的风中走过 四月的梦想写在遥远的天端 看一眼前方 泥泞、荆棘 望一眼身后 坦途、欢笑 我低头不语，沉思… 潇洒？…颓废？… 埋头？…奋斗？… 抬头掠过天地四方 挺起坚贞的脊骨 抛却纷繁的愁绪 携一壶美酒 独自前行 纵是衣袂沾满污泥 纵是乱刺勾破皮肉 纵是愔愔的付出终究化为泡影 喝口酒吧！ 或许还能道出点诗意 看别人逍遥吧！ 看别人嘲笑吧！ 相信不屈的心 经过执着的付出 定能摘下天边那朵彩云]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无极-神]]></title>
    <url>%2F2008%2F12%2F08%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%97%A0%E6%9E%81-%E7%A5%9E%2F</url>
    <content type="text"><![CDATA[天宇常变幻，谁来通古今？四时有定序，何处是神明？江山千朝替，人世万代兴。拂袖烟尘去，人间戏事清。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无极-世]]></title>
    <url>%2F2008%2F12%2F06%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%97%A0%E6%9E%81-%E4%B8%96%2F</url>
    <content type="text"><![CDATA[天地多桀乱，人间无是非。骨肉作食补，苍凉世可悲。挥泪向天洒，只作雪纷飞。血肉儿女情，无字箴言碑。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无极-心]]></title>
    <url>%2F2008%2F12%2F06%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E6%97%A0%E6%9E%81-%E5%BF%83%2F</url>
    <content type="text"><![CDATA[轻心观四宇，落笔便惊涛。驱形为意使，人间自逍遥。诗酒平生任，名利是花雕。风云全变色，天地一身高。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[十月]]></title>
    <url>%2F2008%2F11%2F17%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E5%8D%81%E6%9C%88%2F</url>
    <content type="text"><![CDATA[十月的天 飘着柔软的蓝 地上蓝菊绽开 奔放着它旋转的圆 云彩四溅 让人想起那汉子流淌着的汗 每一滴 都倒映出一片蓝]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[闻严言卧龙班师]]></title>
    <url>%2F2008%2F10%2F25%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E9%97%BB%E4%B8%A5%E8%A8%80%E5%8D%A7%E9%BE%99%E7%8F%AD%E5%B8%88%2F</url>
    <content type="text"><![CDATA[才破魏中兵，又闻蜀内乱。提剑班师日，方知竖子言。大血冲天灵，怒气贯胸间。无有贼臣乱，安得魏师还？]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[登天乐山]]></title>
    <url>%2F2008%2F10%2F23%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E7%99%BB%E5%A4%A9%E4%B9%90%E5%B1%B1%2F</url>
    <content type="text"><![CDATA[雨后江天晓，重峦景色佳。趋身一剑远，咫尺即天涯。乘舟寻芳地，日影顾西斜。云端展苍翠，山脚地低洼。扶木循幽径，半壁遇人家。主人携入室，自称大笑侠。门前葱郁木，堂中淡雅花。酒食不胜美，笑侠故嫌差。把盏论诗书，鼓瑟技风华。兴尽同入梦，旦日复登崖。乘兴登峰顶，晓日未还家。俯首临天下，逍遥人放达。我当从此住，峰峦自我家。人间多美景，都付眼底下。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虞美人]]></title>
    <url>%2F2008%2F10%2F19%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E8%99%9E%E7%BE%8E%E4%BA%BA%2F</url>
    <content type="text"><![CDATA[是处风光不一般，遥忆古道边。仰天大笑是何人？平生壮志酒寄沧海间。睨斜阳独卧青山，赋闲诗一篇。此生若可随人意，但愿长醉不醒梦千年。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[以诗人的方式生活]]></title>
    <url>%2F2008%2F10%2F09%2F%E6%96%87%E5%AD%A6%2F%E9%9A%8F%E7%AC%94%2F%E4%BB%A5%E8%AF%97%E4%BA%BA%E7%9A%84%E6%96%B9%E5%BC%8F%E7%94%9F%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[在大地向天空耸起的最顶端，在目光所能到达的最远处，你孑然独立、豪情诵诗：“问苍茫大地，谁主沉浮？”于是，整个人生便被挥洒成一段不朽的篇章。 在骄阳似火的六月之末，在滚滚东流的大江之滨，你英雄不减、弹剑而歌：“大江东去，浪淘尽，千古风流人物……”于是，整个夏季便被凝练成一曲英雄的史诗。 在绵延无尽的旷野，在皓月孤悬的深夜，面对虚空浩宇，你把酒临风、且舞且歌：“我歌月徘徊，我舞影零乱……”于是，整个夜晚便被浸染成一种洒脱、一种超然。 我说：“天地并不完美，但我们可以追求完美。在追求完美的过程中，我们创造了一种意境，这种意境就是一首诗。这种虚在的完美与实在的不完美就和谐成了对立统一的天地间的奇景。哲学与现实的完美结合确实是世间的一大奇观。” 我说：“生命是一段如歌的行程。有聚的热烈，有散的寡落；有站的锐气，有跌的豪迈……生命的意义不在于得到了多少，最终达到何种高度，而在于其间的过程。人生无常，我唯以诗人的姿态融入生活，去赞美山间溪石、去歌唱人间大义、去凭吊千古人物……” 从今天起，我要诗意的栖居。即使遭逢莫大的挫折，我也要大声的告诉自己：“大丈夫立身于天地之间，坐下来稳如泰山，站起来顶天立地，量此区区小事，何足道哉！”然后低下头，像狗一样学。待到功成名就日，我也能挥一挥衣袖：“仰天大笑出门去，我辈岂是蓬蒿人？” 一旦跌足时，我也坚信：“乌云蔽日天能现，大雪塞途路可干。”然后饮尽一杯浊酒：“长风破浪会有时，直挂云帆济沧海。” 从今天起，我要发掘人世间的至善至美。我相信在人身上有着永恒不灭的光辉，我相信在某一特定的情况下能够唤起所有人对天地万物的博爱。我相信，龌龊与高尚、平凡与卓越，仅在一念之间。我会在忙乱之余注视身边的每一双眼睛，如果从你的眼神中我看到你的灵魂是纯洁的，即使你卑微的躯体蜷伏在一个黑暗的角落里，并且因为种种人们难以知晓的原因犯下了滔天的罪行，世人把你放在绞刑架上，但只要你的灵魂还执着地葆有一种崇高，我会虔心为你祈祷。你的罪行将得到上帝的宽恕，就像上帝宽恕芳汀一样。 以杜甫的方式生活。达能兼济天下，穷不独善其身。得志时，以天下为己任；失意时，迎风高呼：“安得广厦千万间……” 以李白的方式生活。可以失官位，不能丢气节。踌躇满志地来，意气风发地走。囊中可以无资，杯中不能无酒。对月而歌，枕山而卧，与天地共语，接灵感入怀，向心中的天姥山进发。 以李商隐的方式生活。给天地万物赋予一种朦胧美，吟两句似懂非懂的诗歌，无需深究其意义，只求获得一种美的感受。“春蚕到死丝方尽，蜡炬成灰泪始干”，是友情？是爱情？不可说，也许都是，也许都不是。 以诗人的方式生活。去发现并亲味人间的至善至美，为寂寞的人生行程平添几许快意。仰望一轮明月，精神的领空便会上下五千年、纵横八万里，了无拘囿。与历史对话，没有时间与空间的限制。这种完美对现实的弥补令我们叹为观止。 以诗人的方式生活，快哉，快哉！]]></content>
      <categories>
        <category>文学</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自题小像]]></title>
    <url>%2F2008%2F09%2F20%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E8%87%AA%E9%A2%98%E5%B0%8F%E5%83%8F%2F</url>
    <content type="text"><![CDATA[双肩可把日月挑，胸藏四宇我独傲。天下江海皆劣酒，遥饮天河水一瓢。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[破阵子]]></title>
    <url>%2F2006%2F08%2F10%2F%E6%96%87%E5%AD%A6%2F%E5%8F%A4%E8%AF%97%E8%AF%8D%2F%E7%A0%B4%E9%98%B5%E5%AD%90%2F</url>
    <content type="text"><![CDATA[明从东升心暗，霞自西退独愁。挤泪日月心已绊，秋风萧萧人欲虓，何处是乐土？披蓑江上独叹，此心何时能春？满腹冰霜新自踳，黄叶落尽枝应寒，心随万木枯。]]></content>
      <categories>
        <category>文学</category>
        <category>古诗词</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>古诗词</tag>
      </tags>
  </entry>
</search>
